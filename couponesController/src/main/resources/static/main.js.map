{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin-http.service.ts","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/company-http.service.ts","webpack:///./src/app/company.ts","webpack:///./src/app/company/company.component.css","webpack:///./src/app/company/company.component.html","webpack:///./src/app/company/company.component.ts","webpack:///./src/app/coupon.ts","webpack:///./src/app/customer-http.service.ts","webpack:///./src/app/customer.ts","webpack:///./src/app/customer/customer.component.css","webpack:///./src/app/customer/customer.component.html","webpack:///./src/app/customer/customer.component.ts","webpack:///./src/app/log-in-data.ts","webpack:///./src/app/serch-data-for-coupons.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\nimport { LogInData } from './log-in-data';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminHttpService {\n// TODO:chang the url before build\n  private baseUrl:string=\"adminRest\";\n\n  constructor(private http:HttpClient ) { }\n\nadminLogIn(logIn:LogInData){\n   return this.http.post<any>(this.baseUrl +\"/adminlogIn\",logIn);\n// return this.response;\n}\n\nadminLogOut(logInId){\nreturn this.http.post<any>(this.baseUrl+\"/adminLogout\",logInId);\n}\n\n\ncreatCompany(companyData){\n  return this.http.post<any>(this.baseUrl+\"/creatCompany\",companyData);\n  \n}\ndeleteCompany(companyData){\n  \n  return this.http.post<any>(this.baseUrl+\"/deleteCompany\",companyData);\n}\nlistAllCompanies(adminData){\nreturn this.http.post(this.baseUrl+\"/listAllCompany\",adminData);\n}\n\nupdateCompany(companyData){\n  return this.http.post(this.baseUrl+\"/updateCompany\",companyData);\n}\n\n//customers\n\ncreatCustomer(requestData){\n  return this.http.post(this.baseUrl+\"/creatCustomer\",requestData);\n}\nupdateCustomer(customerData){\n  return this.http.post(this.baseUrl+\"/updateCustomer\",customerData);\n}\ndeleteCustomer(customerData){\n  \n  return this.http.post<any>(this.baseUrl+\"/deleteCustomer\",customerData);\n}\nlistAllCustomers(adminData){\nreturn this.http.post(this.baseUrl+\"/listAllCustomers\",adminData);\n}\n\n//incomes\n\ngetCustomerIncome(spicificCustomerData){\n  return this.http.post(this.baseUrl+\"/getCustomerIncome\",spicificCustomerData);\n}\ngetCompanyIncome(spicificCompanyData){\n  return this.http.post(this.baseUrl+\"/getCompanyIncome\",spicificCompanyData);\n}\ngetAllIncome(adminData){\n  return this.http.post(this.baseUrl+\"/getAllIncome\",adminData);\n}\n\n}\n","module.exports = \"h1{\\r\\n    text-align: center;\\r\\n}\\r\\n.logIn{\\r\\n    margin: 2em;\\r\\n    margin-right: 60%;\\r\\n}\\r\\n#companyId, #customerId{\\r\\n    margin: 8px ;\\r\\n}\\r\\n#companyId:hover, #customerId:hover{\\r\\nborder: 5px solid rgb(145, 138, 138);\\r\\n}\"","module.exports = \"<h1>\\n\\n\\n  Admin Service</h1>\\n\\n\\n<!-- customer log in form start -->\\n<div class=\\\"logIn \\\" [hidden]=\\\"logInSuccess\\\">\\n  <form #adminLogIn=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\n\\n    <div>\\n\\n      <div class=\\\"form-group\\\">\\n\\n        <label for=\\\"inputUserName\\\">User Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"name.invalid && name.touched\\\" name=\\\"Name\\\" required #name=\\\"ngModel\\\"\\n          id=\\\"LogInUserName\\\" [(ngModel)]=\\\"logInModel.userName\\\">\\n        <small class=\\\"text-danger\\\" [class.d-none]=\\\"name.valid || name.untouched \\\">user name is required</small>\\n\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"inputUserName\\\">Password</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"password.invalid && password.touched\\\" name=\\\"password\\\" required\\n          #password=\\\"ngModel\\\" id=\\\"LogInPassword\\\" [(ngModel)]=\\\"logInModel.password\\\">\\n        <small class=\\\"text-danger\\\" [class.d-none]=\\\"password.valid || password.untouched \\\">password is required</small>\\n\\n      </div>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"name.invalid || name.untouched || password.invalid || logInBtnClickedDisabled \\\">logIn</button>\\n      <div>\\n\\n        <small class=\\\"text-danger\\\" [class.d-none]=\\\"!logInFailed \\\">log in failed wrong user name or password</small>\\n      </div>\\n\\n    </div>\\n  </form>\\n</div>\\n<div>\\n  <button (click)=\\\"adminLogOut()\\\" [hidden]=!logInSuccess>log out</button>\\n</div>\\n<!-- admin log in form  end -->\\n\\n<div class=\\\"row\\\" [hidden]=\\\"!logInSuccess\\\">\\n  <div class=\\\"col-3\\\">\\n    <div class=\\\"nav flex-column nav-pills\\\" id=\\\"v-pills-tab\\\" role=\\\"tablist\\\" aria-orientation=\\\"vertical\\\">\\n      <a class=\\\"nav-link\\\" id=\\\"v-pills-creat-tab\\\" data-toggle=\\\"pill\\\" href=\\\"#v-pills-creat\\\" role=\\\"tab\\\" aria-controls=\\\"v-pills-creat\\\"\\n        aria-selected=\\\"true\\\">Creat Company</a>\\n      <a class=\\\"nav-link\\\" id=\\\"v-pills-creat-customer-tab\\\" data-toggle=\\\"pill\\\" href=\\\"#v-pills-creat-customer\\\" role=\\\"tab\\\" aria-controls=\\\"v-pills-creat-customer\\\"\\n        aria-selected=\\\"false\\\">Creat Customer</a>\\n      <a class=\\\"nav-link\\\" id=\\\"v-pills-profile-tab\\\" (click)=\\\"listAllCompany()\\\" data-toggle=\\\"pill\\\" href=\\\"#v-pills-profile\\\" role=\\\"tab\\\"\\n        aria-controls=\\\"v-pills-profile\\\" aria-selected=\\\"false\\\">Companies Updates </a>\\n      <a class=\\\"nav-link\\\" id=\\\"v-pills-customers-list-tab\\\" (click)=\\\"listAllCustomers()\\\" data-toggle=\\\"pill\\\" href=\\\"#v-pills-customers-list\\\"\\n        role=\\\"tab\\\" aria-controls=\\\"v-pills-customers-list\\\" aria-selected=\\\"false\\\">Customers Updates</a>\\n      <a class=\\\"nav-link\\\" id=\\\"v-pills-income-list-tab\\\" (click)=\\\"listAllIncome()\\\" data-toggle=\\\"pill\\\" href=\\\"#v-pills-income-list\\\"\\n        role=\\\"tab\\\" aria-controls=\\\"v-pills-income-list\\\" aria-selected=\\\"false\\\">Income Table</a>\\n    </div>\\n  </div>\\n  <div class=\\\"col-9\\\">\\n    <div class=\\\"tab-content\\\" id=\\\"v-pills-tabContent\\\">\\n\\n      <div class=\\\"tab-pane fade show active\\\" active id=\\\"v-pills-creat\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"v-pills-creat-tab\\\">\\n        <div *ngIf=\\\"logInSuccess  ;else elseMassege\\\">\\n\\n          <form #adminCreatCompany=\\\"ngForm\\\" (ngSubmit)=\\\"onCreatCompany()\\\" novalidate>\\n            <!--creat company-->\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"inputCompanyName\\\">Company Name</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"companyName.invalid && companyName.touched\\\" name=\\\"companyName\\\"\\n                #companyName=\\\"ngModel\\\" required id=\\\"companyName-creat\\\" [(ngModel)]=\\\"company.companyName\\\">\\n              <small class=\\\"text-danger\\\" [class.d-none]=\\\"companyName.valid || companyName.untouched \\\">company name is required</small>\\n\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"inputCompanyPassword\\\">Email</label>\\n              <input type=\\\"Email\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"companyEmail.invalid && companyEmail.touched\\\" name=\\\"companyEmail\\\"\\n                required email #companyEmail=\\\"ngModel\\\" id=\\\"companyEmail-creat\\\" [(ngModel)]=\\\"company.email\\\">\\n              <small class=\\\"text-danger\\\" [class.d-none]=\\\"companyEmail.valid || companyEmail.untouched \\\">company email is required</small>\\n\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"inputCompanyPassword\\\">Password</label>\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"companyPassword.invalid && companyPassword.touched\\\" name=\\\"companyPassword\\\"\\n                required #companyPassword=\\\"ngModel\\\" id=\\\"companyPassword-creat\\\" [(ngModel)]=\\\"company.password\\\">\\n              <small class=\\\"text-danger\\\" [class.d-none]=\\\"companyPassword.valid || companyPassword.untouched \\\">company password is required</small>\\n            </div>\\n\\n            <button [disabled]=\\\"creatCompanyBtnClickedDisabled\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"companyName.invalid || companyName.untouched || companyEmail.invalid || companyEmail.untouched || companyPassword.invalid \\\">Creat</button>\\n            <div>\\n              <small class=\\\"text-danger\\\" [class.d-none]=\\\"!companyCreatedFailed \\\">name of the company is already used</small>\\n              <small class=\\\"text-success\\\" [class.d-none]=\\\"!companyCreatedSuccess\\\">company created successfully</small>\\n            </div>\\n\\n          </form>\\n        </div>\\n        <ng-template #elseMassege>\\n          <div>log in to do this task</div>\\n        </ng-template>\\n      </div>\\n      <div class=\\\"tab-pane fade\\\" id=\\\"v-pills-profile\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"v-pills-profile-tab\\\">\\n        <!-- show list of companies start -->\\n        <div *ngIf=\\\"logInSuccess && companiesListed ;else elseMassege\\\">\\n          <div class=\\\"card text-center\\\" id=\\\"companyId\\\" *ngFor=\\\"let company of companies\\\">\\n            <div class=\\\"card-header\\\">\\n              Company Name : {{company.companyName}}\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <h5 class=\\\"card-title\\\">{{company.email}}</h5>\\n\\n              <a (click)=\\\"saveCompanyForDelete(company)\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModalCenter\\\">Delete</a>\\n              <a (click)=\\\"saveCompanyForDelete(company)\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#updateCompanyModalCenter\\\"\\n                aria-controls=\\\"#updateCompanyModalCenter\\\">Update</a>\\n              <a (click)=\\\"listCompanyIncome(company)\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#companyIncomeModalCenter\\\"\\n                aria-controls=\\\"#companyIncomeModalCenter\\\">Show Income</a>\\n\\n\\n            </div>\\n            <div class=\\\"card-footer text-muted\\\">\\n\\n            </div>\\n          </div>\\n\\n        </div>\\n        <!-- show list of companies end -->\\n        <ng-template #elseMassege>\\n          <div>log in to do this task</div>\\n        </ng-template>\\n      </div>\\n\\n\\n      <!--ask if to delete company Modal start-->\\n      <div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <h5 class=\\\"modal-title\\\" id=\\\"exampleModalCenterTitle\\\">Delete company</h5>\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              do you want to delete this company ?\\n\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n              <button type=\\\"button\\\" (click)=deleteCompnay() class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\">Delete</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- ask if to delete company modal end -->\\n\\n      <!-- Update company start -->\\n      <div class=\\\"collapse\\\" id=\\\"updateCompanyModalCenter\\\">\\n        <div class=\\\"card card-body\\\">\\n          <form #adminUpdateCompany=\\\"ngForm\\\" (ngSubmit)=\\\"onUpdateCompany()\\\" novalidate>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"updateCompanyName\\\">Company Name</label>\\n              <input type=\\\"text\\\" disabled class=\\\"form-control\\\" [class.is-invalid]=\\\"companyNameUpdate.invalid && companyNameUpdate.touched\\\"\\n                name=\\\"companyNameUpdate\\\" #companyNameUpdate=\\\"ngModel\\\" required id=\\\"companyName-update\\\" [(ngModel)]=\\\"updatedCompany.companyName\\\">\\n              <small class=\\\"text-danger\\\" [class.d-none]=\\\"companyNameUpdate.valid || companyNameUpdate.untouched \\\">company name is required</small>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"updateCompanyPassword\\\">Email</label>\\n              <input type=\\\"Email\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"companyEmailUpdate.invalid && companyEmailUpdate.touched\\\" name=\\\"companyEmailUpdate\\\"\\n                required email #companyEmailUpdate=\\\"ngModel\\\" id=\\\"companyEmail-update\\\" [(ngModel)]=\\\"updatedCompany.email\\\">\\n              <small class=\\\"text-danger\\\" [class.d-none]=\\\"companyEmailUpdate.valid || companyEmailUpdate.untouched \\\">company email is required</small>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"updateCompanyPassword\\\">Password</label>\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"companyPasswordUpdate.invalid && companyPasswordUpdate.touched\\\"\\n                name=\\\"companyPasswordUpdate\\\" required #companyPasswordUpdate=\\\"ngModel\\\" id=\\\"companyPassword-update\\\" [(ngModel)]=\\\"updatedCompany.password\\\">\\n              <small class=\\\"text-danger\\\" [class.d-none]=\\\"companyPasswordUpdate.valid || companyPasswordUpdate.untouched \\\">company password is required</small>\\n            </div>\\n\\n            <button [disabled]=\\\"updateCompanyBtnClickedDisabled\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"  companyEmailUpdate.invalid ||  companyPasswordUpdate.invalid \\\"\\n              aria-controls=\\\"#updateCompanyModalCenter\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#updateCompanyModalCenter\\\" aria-controls=\\\"#updateCompanyModalCenter\\\">Update</button>\\n\\n          </form>\\n\\n        </div>\\n      </div>\\n      <!-- Update company end -->\\n\\n      <!-- company income list start -->\\n      <div class=\\\"collapse\\\" id=\\\"companyIncomeModalCenter\\\">\\n        <div class=\\\"card card-body\\\">\\n          <div *ngIf=\\\"companyIncomeListed && logInSuccess\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm\\\">\\n                actions Description\\n              </div>\\n              <div class=\\\"col-sm\\\">\\n                amount\\n              </div>\\n\\n            </div>\\n            <div class=\\\"container\\\" *ngFor=\\\"let income of companyIncomeList\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm\\\">\\n                  <div *ngIf=\\\"income.descrption === 'COMPANY_NEW_COUPON' else  elseMassege \\\">\\n                    {{income.name}} creat new coupon\\n                  </div>\\n                  <ng-template #elseMassege>\\n                    {{income.name}} update coupon\\n\\n                  </ng-template>\\n                </div>\\n                <div class=\\\"col-sm\\\">\\n                  {{income.amount}}\\n                </div>\\n\\n\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- company income list end -->\\n\\n\\n      <!-- customers  -->\\n\\n      <div class=\\\"tab-pane fade\\\" id=\\\"v-pills-creat-customer\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"v-pills-creat-customer-tab\\\">\\n        <!-- creat customer form start -->\\n        <div *ngIf=\\\"logInSuccess  ;else elseMassege\\\">\\n\\n          <form #adminCreatCompany=\\\"ngForm\\\" (ngSubmit)=\\\"onCreatCustomer()\\\" novalidate>\\n            <!--creat company-->\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"inputCustomerName\\\">Customer Name</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"customerName.invalid && customerName.touched\\\" name=\\\"customerName\\\"\\n                #customerName=\\\"ngModel\\\" required id=\\\"customerName-creat\\\" [(ngModel)]=\\\"customer.name\\\">\\n              <small class=\\\"text-danger\\\" [class.d-none]=\\\"customerName.valid || customerName.untouched \\\">customer name is required</small>\\n\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"inputCustomerPassword\\\">Password</label>\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"customerPassword\\\" required #customerPassword=\\\"ngModel\\\" id=\\\"customerPassword-creat\\\"\\n                [(ngModel)]=\\\"customer.password\\\">\\n              <small class=\\\"text-danger\\\" [class.d-none]=\\\"customerPassword.valid || customerPassword.untouched \\\">customer password is required</small>\\n\\n            </div>\\n\\n            <button type=\\\"submit\\\" [disabled]=\\\"creatCustomerBtnClickedDisabled\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"customerName.invalid || customerName.untouched  || customerPassword.invalid  \\\">Creat</button>\\n            <div>\\n              <small class=\\\"text-danger\\\" [class.d-none]=\\\"!customerCreatedFailed \\\">customer created failed name is already used</small>\\n              <small class=\\\"text-success\\\" [class.d-none]=\\\"!customerCreatedSuccess \\\">customer created successfully</small>\\n\\n            </div>\\n          </form>\\n        </div>\\n        <ng-template #elseMassege>\\n          <div>log in to do this task</div>\\n        </ng-template>\\n        <!-- creat customer form end -->\\n      </div>\\n\\n      <div class=\\\"tab-pane fade\\\" id=\\\"v-pills-customers-list\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"v-pills-customers-list-tab\\\">\\n\\n\\n        <!-- show customer list Modal  start -->\\n        <div *ngIf=\\\"logInSuccess && customersListed ;else elseMassege\\\">\\n          <div class=\\\"card text-center\\\" id=\\\"customerId\\\" *ngFor=\\\"let customer of customersList\\\">\\n            <div class=\\\"card-header\\\">\\n              Customer Name : {{customer.name}}\\n            </div>\\n            <div class=\\\"card-body\\\">\\n\\n\\n              <a (click)=\\\"saveCustomerForDeleteOrUpdate(customer)\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#deletCustomerModalCenter\\\">Delete</a>\\n              <a (click)=\\\"saveCustomerForDeleteOrUpdate(customer)\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#updateCustomerModalCenter\\\"\\n                aria-controls=\\\"#updateCustomerModalCenter\\\">Update</a>\\n              <a (click)=\\\"listCustomerIncome(customer)\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#customerIncomeModalCenter\\\"\\n                aria-controls=\\\"#customerIncomeModalCenter\\\">Customer Income</a>\\n\\n\\n            </div>\\n            <div class=\\\"card-footer text-muted\\\">\\n\\n            </div>\\n          </div>\\n\\n        </div>\\n        <ng-template #elseMassege>\\n          <div>log in to do this task</div>\\n        </ng-template>\\n        <!-- show customer list Modal  end -->\\n\\n\\n        <!-- ask if the client want to delete customer start -->\\n        <div class=\\\"modal fade\\\" id=\\\"deletCustomerModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"deletCustomerModalCenterTitle\\\"\\n          aria-hidden=\\\"true\\\">\\n          <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n              <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"deletCustomerModalCenterTitle\\\">Delete Customer</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n              </div>\\n              <div class=\\\"modal-body\\\">\\n                do you want to delete this Customer ?\\n\\n              </div>\\n              <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                <button type=\\\"button\\\" (click)=onDeleteCustomer() class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\">Delete</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <!-- ask if the client want to delete customer end -->\\n\\n        <!--  customr update form collapsed card start -->\\n        <div class=\\\"collapse\\\" id=\\\"updateCustomerModalCenter\\\">\\n          <div class=\\\"card card-body\\\">\\n            <form #adminUpdateCustomer=\\\"ngForm\\\" (ngSubmit)=\\\"onUpdateCustomer()\\\" novalidate>\\n\\n              <!-- Update customer -->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"updateCustomerName\\\">Customer Name</label>\\n                <input type=\\\"text\\\" disabled class=\\\"form-control\\\" name=\\\"customerNameUpdate\\\" #CustomerNameUpdate=\\\"ngModel\\\" required id=\\\"customerName-update\\\"\\n                  [(ngModel)]=\\\"updatedCustomer.name\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"updateCompanyPassword\\\">Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"customerPasswordUpdate.invalid && customerPasswordUpdate.touched\\\"\\n                  name=\\\"customerPasswordUpdate\\\" required #customerPasswordUpdate=\\\"ngModel\\\" id=\\\"customerPassword-update\\\" [(ngModel)]=\\\"updatedCustomer.password\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"customerPasswordUpdate.valid || customerPasswordUpdate.untouched \\\">customer password is required</small>\\n\\n              </div>\\n\\n              <button [disabled]=\\\"updateCustomerBtnClickedDisabled\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"  customerPasswordUpdate.invalid \\\"\\n                data-toggle=\\\"collapse\\\" data-target=\\\"#updateCustomerModalCenter\\\" aria-controls=\\\"#updateCustomerModalCenter\\\">Update</button>\\n\\n            </form>\\n          </div>\\n        </div>\\n        <!-- customr  update form collapsed card end -->\\n\\n\\n\\n        <!-- customr income list start-->\\n        <div class=\\\"collapse\\\" id=\\\"customerIncomeModalCenter\\\">\\n          <div class=\\\"card card-body\\\">\\n            <div *ngIf=\\\"customerIncomeListed && logInSuccess \\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm\\\">\\n                  actions Description\\n                </div>\\n                <div class=\\\"col-sm\\\">\\n                  amount\\n                </div>\\n\\n              </div>\\n              <div class=\\\"container\\\" *ngFor=\\\"let income of customerIncomeList\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm\\\">\\n                    <div *ngIf=\\\"income.descrption === 'CUSTOMER_PURCHASE'  \\\">\\n                      {{income.name}} purchase coupon\\n                    </div>\\n\\n                  </div>\\n                  <div class=\\\"col-sm\\\">\\n                    {{income.amount}}\\n                  </div>\\n\\n\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <!-- customr income list end-->\\n\\n\\n      </div>\\n\\n\\n\\n\\n      <!-- all clients income start-->\\n      <div class=\\\"tab-pane fade\\\" id=\\\"v-pills-income-list\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"v-pills-income-list-tab\\\">\\n        <div class=\\\"card card-body\\\">\\n          <div *ngIf=\\\"allIncomelisted && logInSuccess ; else elseMassege\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm\\\">\\n                actions Description\\n              </div>\\n              <div class=\\\"col-sm\\\">\\n                amount\\n              </div>\\n\\n            </div>\\n            <div class=\\\"container\\\" *ngFor=\\\"let income of allIncomelist\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm\\\">\\n                  <div *ngIf=\\\"income.descrption === 'COMPANY_NEW_COUPON'  \\\">\\n                    <strong>{{income.name}}</strong>: creat new coupon\\n                  </div>\\n                  <div *ngIf=\\\"income.descrption === 'COMPANY_UPDATE_COUPON'  \\\">\\n                    <strong>{{income.name}}</strong>: update coupon\\n                  </div>\\n\\n                  <div *ngIf=\\\"income.descrption === 'CUSTOMER_PURCHASE'  \\\">\\n                    <strong>{{income.name}}</strong>: purchase coupon\\n                  </div>\\n\\n\\n                </div>\\n                <div class=\\\"col-sm\\\">\\n                  {{income.amount}}\\n                </div>\\n\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n          <ng-template #elseMassege>\\n            log in to do this task\\n\\n          </ng-template>\\n        </div>\\n      </div>\\n      <!-- all clients income end-->\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { LogInData } from '../log-in-data';\nimport { AdminHttpService } from '../admin-http.service';\nimport { Company } from '../company';\nimport { Customer } from '../customer';\n\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  logInId: number;\n  constructor(private adminHttpServic: AdminHttpService) {\n    this.logInId = null;\n  }\n\n\n  // logIn variables\n  logInModel = new LogInData(this.logInId, \"\", \"\");\n  logInSuccess = false;\n  logInResponseMassege = \"\";\n  logInBtnClickedDisabled = false;\n  logInFailed = false;\n\n  // company variables\n  company = new Company(\"\", \"\", \"\");\n  companies: {};\n  timpcompany = {};\n  updatedCompany = new Company(\"\", \"\", \"\");\n  companiesListed = false;\n  creatCompanyBtnClickedDisabled = false;\n  updateCompanyBtnClickedDisabled = false;\n  companyCreatedFailed = false;\n  companyCreatedSuccess = false;\n\n\n\n\n  // customer variables\n  customer = new Customer(\"\", \"\");\n  timpCustomer: {};\n  customersList: {};\n  customersListed = false;\n  updatedCustomer = new Customer(\"\", \"\");\n  updateCustomerBtnClickedDisabled = false;\n  creatCustomerBtnClickedDisabled = false;\n  customerCreatedFailed = false;\n  customerCreatedSuccess = false;\n\n\n  // income variables\n  companyIncomeList = {};\n  companyIncomeListed = false;\n\n\n  customerIncomeList = {};\n  customerIncomeListed = false;\n\n  allIncomelist = {}\n  allIncomelisted = false;\n\n  ngOnInit() {\n  }\n\n\n  // Login functions \n  // sends the log in data to the server\n  onSubmit() {\n    this.logInBtnClickedDisabled = true;\n    \n    this.adminHttpServic.adminLogIn(this.logInModel)\n      .subscribe(data => this.logInResponseData(data)\n        , error => console.log(\"error\", error));\n\n\n\n  }\n  //receive log in response data from the server\n  // if the log in Succeeded the admin work space well appear and the log in form well disappear\n  // if the log in failed a massage well appear for the client explaining what happened\n  logInResponseData(data) {\n    this.logInResponseMassege = data.response.logInResponseMassege;\n    if (this.logInId === null || this.logInId !== 0) {\n      this.logInId = data.response.id;\n\n    }\n    if (this.logInResponseMassege === \"LOGINSUCCESS\") {\n      this.logInSuccess = true;\n      this.logInFailed = false;\n\n    } else {\n      this.logInFailed = true;\n      this.logInSuccess = false;\n    }\n\n    this.logInBtnClickedDisabled = false;\n\n  }\n\n\n\n\n\n  // sends the client authorization id to log out from the server\n  adminLogOut() {\n    let requestData = {\n      clientId: this.logInId\n    }\n    this.adminHttpServic.adminLogOut(requestData)\n      .subscribe(data => this.logOutResponseData(data),\n        error => console.log(error)\n      )\n  }\n  // receive the data from the server response \n  // hide the admin work space\n  logOutResponseData(data) {\n    \n    this.logInSuccess = false;\n  }\n\n  // companies function \n  /////////////////////////////////////////\n  // send the company data to the server to be created\n  onCreatCompany() {\n    this.creatCompanyBtnClickedDisabled = true;\n    let requestData = {\n\n      clientId: this.logInId,\n      company: this.company\n    }\n    this.adminHttpServic.creatCompany(requestData)\n      .subscribe(data => this.onCreatCompanyData(data)\n        ,\n        error => console.log(error)\n      )\n\n\n  }\n  // receives the server response \n  // if the coupon  created successfully a massage well appear explains that it success \n  // if the server faild to creat the company a massage well appear explains that it failed\n  private onCreatCompanyData(data) {\n\n\n\n    if (data.response === \"COMPANYCREATED\") {\n      this.companyCreatedSuccess = true;\n      this.companyCreatedFailed = false;\n    } if (data.responseMessage === \"COMPANYNAMEISUSED\") {\n      this.companyCreatedSuccess = false;\n      this.companyCreatedFailed = true;\n    }\n    this.creatCompanyBtnClickedDisabled = false;\n  }\n  //sends the Authorization id to get list of all the companies\n  listAllCompany() {\n    this.companiesListed = false\n    let requestData = {\n      clientId: this.logInId\n    }\n    this.adminHttpServic.listAllCompanies(requestData)\n      .subscribe(data => this.listAllCompaniesTrue(data),\n        error => console.log(error)\n      )\n  }\n  // receive the response from the server\n  // save the list of the companies to local variable\n  // shows the companies list in the work space\n  private listAllCompaniesTrue(data) {\n    this.companies = data.response;\n    this.companiesListed = true;\n\n\n  }\n\n  // sends the authorization id and the company data\n  // from the temporary variable to the srver to delete it\n  deleteCompnay() {\n    \n\n    let requestData = {\n      clientId: this.logInId,\n      company: this.timpcompany\n    }\n    this.adminHttpServic.deleteCompany(requestData).subscribe(\n      data => this.deletCompanydata(data)\n      ,\n      error => console.log(error)\n\n\n    )\n  }\n  // receives the response from the server and change the companies list \n  // in the work space\n  private deletCompanydata(data) {\n\n    this.listAllCompany();\n\n\n  }\n  // saves the company in a temporary variable before update of delete\n  saveCompanyForDelete(company) {\n    this.timpcompany = company;\n    this.updatedCompany = company;\n  }\n\n\n  // sends the company data from the temporary variable \n  // and the authorization id to the server to update the company\n  onUpdateCompany() {\n    this.updateCompanyBtnClickedDisabled = true;\n   \n    let requestData = {\n      clientId: this.logInId,\n      company: this.updatedCompany\n    }\n    this.adminHttpServic.updateCompany(requestData).\n      subscribe(data => this.updateComapnyData(data)\n      )\n  }\n  private updateComapnyData(data) {\n\n    this.listAllCompany();\n    this.updateCompanyBtnClickedDisabled = false;\n  }\n\n\n\n  // customers functions\n\n  //sends the customer data to creat new customer on the server \n  onCreatCustomer() {\n\n    this.creatCustomerBtnClickedDisabled = true;\n    let requestData = {\n\n      clientId: this.logInId,\n      customer: this.customer\n    }\n    this.adminHttpServic.creatCustomer(requestData)\n      .subscribe(data => this.creatCustomerData(data)\n      )\n\n  }\n  // receives the server response \n  // if the customer  created successfully a massage well appear explains that it success \n  // if the server faild to creat the customer a massage well appear explains that it failed\n\n  private creatCustomerData(data) {\n    \n    this.creatCustomerBtnClickedDisabled = false;\n    if (data.response === \"CUSTOMERCREATED\") {\n      this.customerCreatedFailed = false;\n      this.customerCreatedSuccess = true;\n    }\n    if (data.responseMessage === \"CUSTOMERNAMEISUSED\") {\n      this.customerCreatedFailed = true;\n      this.customerCreatedSuccess = false;\n    }\n  }\n\n  // sends the authorization id and the customer data\n  // from the temporary variable to the srver to delete it\n  onDeleteCustomer() {\n    let requestData = {\n      clientId: this.logInId,\n      customer: this.timpCustomer\n    }\n    this.adminHttpServic.deleteCustomer(requestData)\n      .subscribe(data => this.deleteCustomerData(data)\n\n      )\n\n  }\n  // receives the response from the server and change the list \n  // of the customers in the work space\n  private deleteCustomerData(data) {\n    \n\n    this.listAllCustomers();\n  }\n  // saves the customer data in a temporary variable before update of delete\n  saveCustomerForDeleteOrUpdate(customer) {\n    this.timpCustomer = customer;\n    this.updatedCustomer = customer;\n  }\n  // sends the customer data from the temporary variable \n  // and the authorization id to the server to update the customer\n  onUpdateCustomer() {\n    this.updateCustomerBtnClickedDisabled = true;\n    let requestData = {\n      clientId: this.logInId,\n      customer: this.updatedCustomer\n    }\n\n    this.adminHttpServic.updateCustomer(requestData)\n      .subscribe(data => this.updateCustomerData(data)\n      )\n  }\n  // receives the response from the server\n  //  update the customers list in the work space\n\n  private updateCustomerData(data) {\n\n    this.updateCustomerBtnClickedDisabled = false;\n    this.listAllCustomers();\n\n  }\n  // sends the Authorization id to get list of all the customers \n  listAllCustomers() {\n    let requestData = {\n      clientId: this.logInId\n    }\n    this.adminHttpServic.listAllCustomers(requestData)\n      .subscribe(data => this.listAllCustomersTrue(data))\n  }\n  // receive the response from the server\n  // save the list of the customers to local variable\n  // shows the customers list in the work space\n  private listAllCustomersTrue(data) {\n    this.customersList = data.response\n    this.customersListed = true;\n\n\n  }\n\n\n  // income function\n\n  // sends the authorization id and the company data to the server \n  // to get list of company income\n  listCompanyIncome(company) {\n\n    let requestData = {\n      clientId: this.logInId,\n      company: company\n    }\n    this.adminHttpServic.getCompanyIncome(requestData)\n      .subscribe(data => this.listCompanyIncomeData(data))\n  }\n  // receives the response from the data base \n  // saves list of the income in local variable \n  // show the list in the admin work space \n  listCompanyIncomeData(data) {\n    this.companyIncomeList = data.response;\n    this.companyIncomeListed = true;\n  }\n\n  // sends the authorization id and the customer data to the server \n  // to get list of customer income\n  listCustomerIncome(customer) {\n\n    let requestData = {\n      clientId: this.logInId,\n      customer: customer\n    }\n    this.adminHttpServic.getCustomerIncome(requestData)\n      .subscribe(data => this.listCustomerIncomeData(data))\n  }\n  // receives the response from the data base \n  // saves list of the income in local variable \n  // show the list in the admin work space\n  listCustomerIncomeData(data) {\n    this.customerIncomeList = data.response;\n    this.customerIncomeListed = true;\n  }\n  // sends the authorization id to the server \n  // to get list of customers and companies income\n  listAllIncome() {\n    let requestData = {\n      clientId: this.logInId,\n\n    }\n    this.adminHttpServic.getAllIncome(requestData)\n      .subscribe(data => this.getAllIncomeData(data))\n\n\n  }\n  // receives the response from the data base \n  // saves list of the income in local variable \n  // show the list in the admin work space\n  getAllIncomeData(data) {\n    this.allIncomelist = data.response;\n    this.allIncomelisted = true;\n  }\n\n}\n","import {NgModule} from '@angular/core';\r\nimport {Routes,RouterModule} from '@angular/router';\r\nimport { CustomerComponent } from './customer/customer.component';\r\nimport { CompanyComponent } from './company/company.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n    {path:'customerService',component:CustomerComponent},\r\n    {path:'companyService',component:CompanyComponent},\r\n    {path:'adminService',component:AdminComponent},\r\n    \r\n] ;\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule{\r\n\r\n        }\r\nexport const routingComponents = [CustomerComponent,CompanyComponent,AdminComponent];","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  \\n</div>\\n<nav>\\n    <div class=\\\"nav nav-tabs\\\" id=\\\"nav-tab\\\" role=\\\"tablist\\\">\\n      <a class=\\\"nav-item nav-link active\\\" id=\\\"nav-home-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-home\\\" routerLink=\\\"/customerService\\\"  role=\\\"tab\\\" aria-controls=\\\"nav-home\\\" aria-selected=\\\"true\\\">customer service</a>\\n      <a class=\\\"nav-item nav-link\\\" id=\\\"nav-profile-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-home\\\" routerLink=\\\"/companyService\\\"  role=\\\"tab\\\" aria-controls=\\\"nav-profile\\\" aria-selected=\\\"false\\\">company service</a>\\n      <a class=\\\"nav-item nav-link\\\" id=\\\"nav-contact-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-home\\\" routerLink=\\\"/adminService\\\"  role=\\\"tab\\\" aria-controls=\\\"nav-contact\\\" aria-selected=\\\"false\\\">admin service</a>\\n    </div>\\n  </nav>\\n  \\n  \\n\\n\\n    <router-outlet></router-outlet>\\n    <!--  Routed niews go here -->\\n  \\n\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n\n  \n\n  clientService(){\n   \n\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport {FormsModule} from '@angular/forms';\nimport {AppRoutingModule ,routingComponents} from './app-routing.module';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  \n    routingComponents,\n  \n    \n   \n  \n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\nimport { LogInData } from './log-in-data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompanyHttpService {\n\n  constructor(private companyHttp:HttpClient) { }\n\n  private baseUrl:string=\"companyRest\";\n\n\n// sends the log in data to the server to check if the log in success or not \n// return (LOGINSUCCESS  OR ALREADYLOGGEDIN) with authorization id OR LOGINFAILED\n  companyLogIn(logIn:LogInData){\n    return this.companyHttp.post<any>(this.baseUrl +\"/companylogIn\",logIn);\n\n }\n//  sends authorization id to log out \n companyLogOut(logInIdData){\n return this.companyHttp.post<any>(this.baseUrl+\"/companyLogOut\",logInIdData);\n }\n//  sends coupon data with authorization id to creat coupon\n creatCoupon(couponData){\n return this.companyHttp.post<any>(this.baseUrl+\"/creatCoupon\",couponData);\n }\n //  sends coupon data with authorization id to delete coupon\n deleteCoupon(couponData){\n return this.companyHttp.post<any>(this.baseUrl+\"/deleteCoupon\",couponData);\n }\n //  sends coupon data with authorization id to update coupon\n updateCoupon(couponData){\n return this.companyHttp.post<any>(this.baseUrl+\"/updateCoupon\",couponData);\n }\n\n//  sends the specificCouponData to the server to get list of coupons depends \n// on the type or price or endDate\n getSpecificCoupons(couponTypeOrPriceOrEndDateData){\n return this.companyHttp.post<any>(this.baseUrl+\"/getSpecificCoupons\",couponTypeOrPriceOrEndDateData);\n }\n//  sends the authorization id to get list of all company coupons\n listAllCoupons(logInIdData){\n return this.companyHttp.post<any>(this.baseUrl+\"/listAllCoupons\",logInIdData);\n }\n//  sends the authorization id to get list of all company income\ngetCompanyIncome(couponData){\n return this.companyHttp.post<any>(this.baseUrl+\"/getCompanyIncome\",couponData);\n }\n\n\n\n\n\n}\n","export class Company {\n    constructor(public companyName:string,public email:string,public password:string){\n\n    }\n}\n","module.exports = \"h1{\\r\\n    text-align: center;\\r\\n}\\r\\n.logIn{\\r\\n    margin: 2em;\\r\\n    margin-right: 60%;\\r\\n}\"","module.exports = \"<h1>Company Service</h1>\\n\\n\\n<div class=\\\"logIn \\\" [hidden]=\\\"logInSuccess\\\">\\n  <form #adminLogIn=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\n\\n    <div>\\n      <div class=\\\"form-group\\\">\\n\\n        <label for=\\\"inputUserName\\\">User Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"name.invalid && name.touched\\\" name=\\\"Name\\\" required #name=\\\"ngModel\\\"\\n          id=\\\"LogInUserName\\\" [(ngModel)]=\\\"logInModel.userName\\\">\\n        <small class=\\\"text-danger\\\" [class.d-none]=\\\"name.valid || name.untouched \\\">user name is required</small>\\n\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"inputUserName\\\">Password</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"password.invalid && password.touched\\\" name=\\\"password\\\" required\\n          #password=\\\"ngModel\\\" id=\\\"LogInPassword\\\" [(ngModel)]=\\\"logInModel.password\\\">\\n        <small class=\\\"text-danger\\\" [class.d-none]=\\\"password.valid || password.untouched \\\">password is required</small>\\n        <div>\\n          <small class=\\\"text-danger\\\" [class.d-none]=\\\"!logInFailed \\\">log in failed wrong user name or password</small>\\n\\n        </div>\\n      </div>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"name.invalid || name.untouched || password.invalid || logInBtnClickedDisabled \\\">logIn</button>\\n    </div>\\n  </form>\\n</div>\\n<div>\\n  <button (click)=\\\"companyLogOut()\\\" [hidden]=!logInSuccess>log out</button>\\n</div>\\n\\n\\n\\n<!-- customer main content  start -->\\n<div class=\\\"row\\\" [hidden]=!logInSuccess>\\n  <!-- links for the content -->\\n  <div class=\\\"col-3\\\">\\n    <div class=\\\"nav flex-column nav-pills\\\" id=\\\"v-pills-tab\\\" role=\\\"tablist\\\" aria-orientation=\\\"vertical\\\">\\n      <a class=\\\"nav-link\\\" id=\\\"v-pills-creat-coupon-tab\\\" data-toggle=\\\"pill\\\" href=\\\"#v-pills-creat-coupon\\\" role=\\\"tab\\\" aria-controls=\\\"v-pills-creat-coupon\\\"\\n        aria-selected=\\\"true\\\">Creat Coupon</a>\\n      <a class=\\\"nav-link\\\" id=\\\"v-pills-get-coupon-tab\\\" (click)=\\\"listAllCoupons(); \\\" data-toggle=\\\"pill\\\" href=\\\"#v-pills-get-coupon\\\"\\n        role=\\\"tab\\\" aria-controls=\\\"v-pills-get-coupon\\\" aria-selected=\\\"false\\\">coupons </a>\\n      <a class=\\\"nav-link\\\" id=\\\"v-pills-get-coupon-by-type-tab\\\" (click)=\\\"activateSearchByType()\\\" data-toggle=\\\"pill\\\" href=\\\"#v-pills-get-coupon-by-type\\\"\\n        role=\\\"tab\\\" aria-controls=\\\"v-pills-get-coupon-by-type\\\" aria-selected=\\\"false\\\">coupons by type</a>\\n      <a class=\\\"nav-link\\\" id=\\\"v-pills-get-coupon-by-price-tab\\\" (click)=\\\"activateSearchByPrice()\\\" data-toggle=\\\"pill\\\" href=\\\"#v-pills-get-coupon-by-price\\\"\\n        role=\\\"tab\\\" aria-controls=\\\"v-pills-get-coupon-by-price\\\" aria-selected=\\\"false\\\">coupons by price</a>\\n      <a class=\\\"nav-link\\\" id=\\\"v-pills-get-coupon-by-endDate-tab\\\" (click)=\\\"activateSearchByEndDate()\\\" data-toggle=\\\"pill\\\" href=\\\"#v-pills-get-coupon-by-endDate\\\"\\n        role=\\\"tab\\\" aria-controls=\\\"v-pills-get-coupon-by-endDate\\\" aria-selected=\\\"false\\\">coupons by End Date</a>\\n      <a class=\\\"nav-link\\\" id=\\\"v-pills-income-list-tab\\\" (click)=\\\"listAllCompanyIncome()\\\" data-toggle=\\\"pill\\\" href=\\\"#v-pills-list-income\\\"\\n        role=\\\"tab\\\" aria-controls=\\\"v-pills-list-income\\\" aria-selected=\\\"false\\\">Income Table</a>\\n    </div>\\n  </div>\\n  <!-- company work space -->\\n  <div class=\\\"col-9\\\">\\n    <div class=\\\"tab-content\\\" id=\\\"v-pills-tabContent\\\">\\n\\n\\n\\n      <div class=\\\"tab-pane fade show active\\\" active id=\\\"v-pills-creat-coupon\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"v-pills-creat-coupon-tab\\\">\\n        <div *ngIf=\\\"logInSuccess\\\">\\n\\n          <form #companyCreatCoupon=\\\"ngForm\\\" (ngSubmit)=\\\"onCreatCoupon()\\\" novalidate>\\n            <!--creat coupon start-->\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"inputCouponTitle\\\">Title</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponTitle.invalid && couponTitle.touched \\\" name=\\\"couponTitle\\\"\\n                #couponTitle=\\\"ngModel\\\" required id=\\\"couponTitle-creat\\\" [(ngModel)]=\\\"couponModel.title\\\">\\n              <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponTitle.valid || couponTitle.untouched \\\">title is required</small>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"inputCouponStartDate\\\">startDate</label>\\n              <input type=\\\"date\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponStartDate.invalid && couponStartDate.touched \\\" name=\\\"couponStartDate\\\"\\n                #couponStartDate=\\\"ngModel\\\" required id=\\\"couponStartDate-creat\\\" [(ngModel)]=\\\"couponModel.startDate\\\">\\n              <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponStartDate.valid || couponStartDate.untouched \\\">startDate is required</small>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"inputCouponEndDate\\\">endDate</label>\\n              <input type=\\\"date\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponEndDate.invalid && couponEndDate.touched  \\\" name=\\\"'couponEndDate'\\\"\\n                #couponEndDate=\\\"ngModel\\\" required id=\\\"couponEndDate-creat\\\" [(ngModel)]=\\\"couponModel.endDate\\\">\\n              <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponEndDate.valid || couponEndDate.untouched \\\">endDate is required</small>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"inputCouponAmount\\\">Amount</label>\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponAmount.invalid && couponAmount.touched \\\" name=\\\"couponAmount\\\"\\n                required #couponAmount=\\\"ngModel\\\" id=\\\"couponAmount-creat\\\" [(ngModel)]=\\\"couponModel.amount\\\">\\n              <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponAmount.valid || couponAmount.untouched \\\">Amount is required</small>\\n\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"inputCouponPrice\\\">Price</label>\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponPrice.invalid && couponPrice.touched \\\" name=\\\"couponPrice\\\"\\n                required #couponPrice=\\\"ngModel\\\" id=\\\"couponPrice-creat\\\" [(ngModel)]=\\\"couponModel.price\\\">\\n              <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponPrice.valid || couponPrice.untouched \\\">Amount is required</small>\\n\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"inputCouponType\\\">Coupon type</label>\\n              <select class=\\\"custom-select\\\" name=\\\"couponType\\\" [class.is-invalid]=\\\"couponType.invalid && couponType.touched\\\" required #couponType=\\\"ngModel\\\"\\n                id=\\\"couponType-creat\\\" [(ngModel)]=\\\"couponModel.couponType\\\">\\n\\n                <option value=\\\"RESTURANS\\\" selected>RESTURANS</option>\\n                <option value=\\\"ELECTRICITY\\\">ELECTRICITY</option>\\n                <option value=\\\"FOOD\\\">FOOD</option>\\n                <option value=\\\"HEALTH\\\">HEALTH</option>\\n                <option value=\\\"SPORTS\\\">SPORTS</option>\\n                <option value=\\\"CAMPING\\\">CAMPING</option>\\n                <option value=\\\"TRAVELLING\\\">TRAVELLING</option>\\n              </select>\\n              <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponType.valid || couponType.untouched \\\">couponType is required</small>\\n\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"inputCouponMassege\\\">Massege </label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponMassege.invalid && couponMassege.touched\\\" name=\\\"couponMassege\\\"\\n                required #couponMassege=\\\"ngModel\\\" id=\\\"couponMassege-creat\\\" [(ngModel)]=\\\"couponModel.massage\\\">\\n              <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponMassege.valid || couponMassege.untouched \\\">massege is required</small>\\n\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"inputCouponImage\\\">Image </label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponImage.invalid && couponImage.touched\\\" name=\\\"couponImage\\\"\\n                required #couponImage=\\\"ngModel\\\" id=\\\"couponImage-creat\\\" [(ngModel)]=\\\"couponModel.image\\\">\\n              <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponImage.valid || couponImage.untouched \\\">image is required</small>\\n            </div>\\n\\n            <button [disabled]=\\\"creatCouponBtnClickedDisabled\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"couponTitle.invalid || couponTitle.untouched || couponStartDate.invalid || couponStartDate.untouched ||\\n                        couponEndDate.invalid || couponEndDate.untouched ||couponAmount.invalid || couponAmount.untouched ||couponType.invalid || couponType.untouched ||couponMassege.invalid || couponMassege.untouched ||couponImage.invalid \\\">Creat</button>\\n            <!--creat coupon end-->\\n            <div>\\n              <small class=\\\"text-success\\\" [class.d-none]=\\\"!couponCreatedSuccessfully\\\">coupon created successfully</small>\\n              <small class=\\\"text-danger\\\" [class.d-none]=\\\"!couponCreatedFailed\\\">coupon created failed title may be already used</small>\\n\\n            </div>\\n          </form>\\n        </div>\\n\\n\\n\\n      </div>\\n\\n\\n\\n      <div class=\\\"tab-pane fade show active\\\" active id=\\\"v-pills-get-coupon\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"v-pills-get-coupon-tab\\\">\\n\\n\\n\\n        <!-- list company coupons cards start -->\\n        <div *ngIf=\\\"logInSuccess && couponsListed \\\">\\n          <div class=\\\"card text-center\\\" id=\\\"couponId\\\" *ngFor=\\\"let coupon of couponsList\\\">\\n            <div class=\\\"card-header\\\">\\n              Coupon title : {{coupon.title}}\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-4\\\">\\n                  Coupon Start date : {{coupon.startDate}}\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                  Coupon End Date : {{coupon.endDate}}\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                  Coupon Price : {{coupon.price}}\\n                </div>\\n\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-4\\\">\\n                  Coupon Type : {{coupon.couponType}}\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                  Coupon Amount : {{coupon.amount}}\\n                </div>\\n                <div class=\\\"col-12\\\">\\n                  Massege : {{coupon.massage}}\\n                </div>\\n\\n\\n\\n              </div>\\n\\n              <a (click)=\\\"saveCouponForDeleteOrUpdate(coupon)\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#deletCouponModalCenter\\\">Delete</a>\\n              <a (click)=\\\"saveCouponForDeleteOrUpdate(coupon)\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#updateCouponModalCenter\\\"\\n                aria-controls=\\\"#updateCouponModalCenter\\\">Update</a>\\n\\n\\n            </div>\\n            <div class=\\\"card-footer text-muted\\\">\\n\\n            </div>\\n          </div>\\n\\n        </div>\\n\\n        <!--list company coupons cards end -->\\n\\n        <!--ask if to delet the coupon Modal start -->\\n        <div class=\\\"modal fade\\\" id=\\\"deletCouponModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"deletCouponModalCenterTitle\\\"\\n          aria-hidden=\\\"true\\\">\\n          <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n              <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"deletCouponModalCenterTitle\\\">Delete Coupon</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n              </div>\\n              <div class=\\\"modal-body\\\">\\n                do you want to delete this Coupon ?\\n\\n              </div>\\n              <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                <button type=\\\"button\\\" (click)=onDeleteCoupon() class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\">Delete</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <!--ask if to delet the coupon Modal end -->\\n\\n\\n        <!-- update coupon collap start -->\\n        <div class=\\\"collapse\\\" id=\\\"updateCouponModalCenter\\\">\\n          <div class=\\\"card card-body\\\">\\n            <form #companyCreatCoupon=\\\"ngForm\\\" (ngSubmit)=\\\"onUpdateCoupon()\\\" novalidate>\\n              <!--update company-->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponTitle\\\">Title</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" disabled name=\\\"couponTitle\\\" [class.is-invalid]=\\\"couponTitle.invalid && couponTitle.touched \\\"\\n                  #couponTitle=\\\"ngModel\\\" required id=\\\"couponTitle-update\\\" [(ngModel)]=\\\"updatedCoupon.title\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponTitle.valid || couponTitle.untouched \\\">title is required</small>\\n\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponStartDate\\\">startDate</label>\\n                <input type=\\\"date\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponStartDate.invalid && couponStartDate.touched \\\" name=\\\"couponStartDate\\\"\\n                  #couponStartDate=\\\"ngModel\\\" required id=\\\"couponStartDate-update\\\" [(ngModel)]=\\\"updatedCoupon.startDate\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponStartDate.valid || couponStartDate.untouched \\\">coupon startDate is required</small>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponEndDate\\\">endDate</label>\\n                <input type=\\\"date\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponEndDate.invalid && couponEndDate.touched \\\" name=\\\"'couponEndDate'\\\"\\n                  #couponEndDate=\\\"ngModel\\\" required id=\\\"couponEndDate-update\\\" [(ngModel)]=\\\"updatedCoupon.endDate\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponEndDate.valid || couponEndDate.untouched \\\">coupon endDate is required</small>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponAmount\\\">Amount</label>\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponAmount.invalid && couponAmount.touched \\\" name=\\\"couponAmount\\\"\\n                  required #couponAmount=\\\"ngModel\\\" id=\\\"couponAmount-update\\\" [(ngModel)]=\\\"updatedCoupon.amount\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponAmount.valid || couponAmount.untouched \\\">coupon amount is required</small>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponPrice\\\">Price</label>\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponPrice.invalid && couponPrice.touched \\\" name=\\\"couponPrice\\\"\\n                  required #couponPrice=\\\"ngModel\\\" id=\\\"couponPrice-update\\\" [(ngModel)]=\\\"updatedCoupon.price\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponPrice.valid || couponPrice.untouched \\\">coupon Price is required</small>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponType\\\">Coupon type</label>\\n                <select class=\\\"custom-select\\\" [class.is-invalid]=\\\"couponType.invalid && couponType.touched \\\" name=\\\"couponType\\\" required #couponType=\\\"ngModel\\\"\\n                  id=\\\"couponType-update\\\" [(ngModel)]=\\\"updatedCoupon.couponType\\\">\\n\\n                  <option value=\\\"RESTURANS\\\" selected>RESTURANS</option>\\n                  <option value=\\\"ELECTRICITY\\\">ELECTRICITY</option>\\n                  <option value=\\\"FOOD\\\">FOOD</option>\\n                  <option value=\\\"HEALTH\\\">HEALTH</option>\\n                  <option value=\\\"SPORTS\\\">SPORTS</option>\\n                  <option value=\\\"CAMPING\\\">CAMPING</option>\\n                  <option value=\\\"TRAVELLING\\\">TRAVELLING</option>\\n                </select>\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponType.valid || couponType.untouched \\\">coupon type is required</small>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponMassege\\\">Massege </label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponMassege.invalid && couponMassege.touched \\\" name=\\\"couponMassege\\\"\\n                  required #couponMassege=\\\"ngModel\\\" id=\\\"couponMassege-update\\\" [(ngModel)]=\\\"updatedCoupon.massage\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponMassege.valid || couponMassege.untouched \\\">coupon massage is required</small>\\n\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponImage\\\">Image </label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponImage.invalid && couponImage.touched \\\" name=\\\"couponImage\\\"\\n                  required #couponImage=\\\"ngModel\\\" id=\\\"couponImage-update\\\" [(ngModel)]=\\\"updatedCoupon.image\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponImage.valid || couponImage.untouched \\\">coupon image is required</small>\\n\\n              </div>\\n\\n              <button [disabled]=\\\"updataCouponBtnDisabled\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"couponTitle.invalid  || couponStartDate.invalid  ||\\n          couponEndDate.invalid ||couponAmount.invalid  ||couponType.invalid  ||couponMassege.invalid  ||couponImage.invalid \\\"\\n                data-toggle=\\\"collapse\\\" data-target=\\\"#updateCouponModalCenter\\\" aria-controls=\\\"#updateCouponModalCenter\\\">Update</button>\\n             \\n            </form>\\n          </div>\\n        </div>\\n        <!-- update coupon collap end -->\\n      </div>\\n\\n      <!-- ////////////////////////////////////////////////////////////////////////////////////////////// -->\\n      <!-- ////////////////////////////////////////////////////////////////////////////////////////////////////             -->\\n\\n\\n\\n\\n\\n      <!--search coupon by type start -->\\n      <div class=\\\"tab-pane fade \\\" active id=\\\"v-pills-get-coupon-by-type\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"v-pills-get-coupon-by-type-tab\\\">\\n        <div *ngIf=\\\"logInSuccess && activateGetCouponByTypeTab \\\">\\n          <!-- search coupon by type input -->\\n          <form #searchByCouponTypeForm=\\\"ngForm\\\" (ngSubmit)=\\\"listSpecificCouponsByType()\\\" novalidate>\\n            <div class=\\\"form-row align-items-center\\\">\\n              Chose coupon type :\\n              <div class=\\\"col-auto my-1\\\">\\n\\n                <select class=\\\"custom-select mr-sm-2\\\" [class.is-invalid]=\\\"couponType.invalid && couponType.touched \\\" name=\\\"couponType\\\" required\\n                  #couponType=\\\"ngModel\\\" id=\\\"couponType-search\\\" [(ngModel)]=\\\"serchDataForCoupons.couponType\\\">\\n\\n                  <option value=\\\"RESTURANS\\\" selected>RESTURANS</option>\\n                  <option value=\\\"ELECTRICITY\\\">ELECTRICITY</option>\\n                  <option value=\\\"FOOD\\\">FOOD</option>\\n                  <option value=\\\"HEALTH\\\">HEALTH</option>\\n                  <option value=\\\"SPORTS\\\">SPORTS</option>\\n                  <option value=\\\"CAMPING\\\">CAMPING</option>\\n                  <option value=\\\"TRAVELLING\\\">TRAVELLING</option>\\n                </select>\\n              </div>\\n              <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponType.valid || couponType.untouched \\\">coupon type is required</small>\\n\\n              <div class=\\\"col-auto my-1\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"couponType.invalid\\\" class=\\\"btn btn-primary\\\">Search</button>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n\\n\\n        <!--show coupon by type cards start -->\\n        <div *ngIf=\\\"logInSuccess && specificByTypeCouponsListed \\\">\\n          <div class=\\\"card text-center\\\" id=\\\"couponIdByType\\\" *ngFor=\\\"let coupon of specificByTypeCouponsList\\\">\\n            <div class=\\\"card-header\\\">\\n              Coupon title : {{coupon.title}}\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-4\\\">\\n                  Coupon Start date : {{coupon.startDate}}\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                  Coupon End Date : {{coupon.endDate}}\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                  Coupon Price : {{coupon.price}}\\n                </div>\\n\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-4\\\">\\n                  Coupon Type : {{coupon.couponType}}\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                  Coupon Amount : {{coupon.amount}}\\n                </div>\\n                <div class=\\\"col-12\\\">\\n                  Massege : {{coupon.massage}}\\n                </div>\\n\\n\\n\\n              </div>\\n\\n              <a (click)=\\\"saveCouponForDeleteOrUpdate(coupon)\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#deletCouponByTypeModalCenter\\\">Delete</a>\\n              <a (click)=\\\"saveCouponForDeleteOrUpdate(coupon)\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#updateCouponByTypeModalCenter\\\"\\n                aria-controls=\\\"#updateCouponByTypeModalCenter\\\">Update</a>\\n\\n\\n            </div>\\n            <div class=\\\"card-footer text-muted\\\">\\n\\n            </div>\\n          </div>\\n\\n        </div>\\n\\n        <!--show coupon by type cards end -->\\n        <!--ask if to delete coupon Modal by type start -->\\n        <div class=\\\"modal fade\\\" id=\\\"deletCouponByTypeModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"deletCouponByTypeModalCenterTitle\\\"\\n          aria-hidden=\\\"true\\\">\\n          <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n              <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"deletCouponByTypeModalCenterTitle\\\">Delete Coupon</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n              </div>\\n              <div class=\\\"modal-body\\\">\\n                do you want to delete this Coupon ?\\n\\n              </div>\\n              <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                <button type=\\\"button\\\" (click)=onDeleteCoupon() class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\">Delete</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <!--ask if to delete coupon Modal by type end -->\\n\\n\\n        <!-- update coupon by type collap start -->\\n        <div class=\\\"collapse\\\" id=\\\"updateCouponByTypeModalCenter\\\">\\n          <div class=\\\"card card-body\\\">\\n            <form #searchCompanyByTypeUpdateCoupon=\\\"ngForm\\\" (ngSubmit)=\\\"onUpdateCoupon()\\\" novalidate>\\n              <!--update coupon-->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponTitle\\\">Title</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponByTypeTitle.invalid && couponByTypeTitle.touched \\\" disabled\\n                  name=\\\"couponByTypeTitle\\\" #couponByTypeTitle=\\\"ngModel\\\" required id=\\\"couponByTypeTitle-update\\\" [(ngModel)]=\\\"updatedCoupon.title\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponByTypeTitle.valid || couponByTypeTitle.untouched \\\">couponType is required</small>\\n\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponStartDate\\\">startDate</label>\\n                <input type=\\\"date\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponByTypeStartDate.invalid && couponByTypeStartDate.touched \\\"\\n                  name=\\\"couponByTypeStartDate\\\" #couponByTypeStartDate=\\\"ngModel\\\" required id=\\\"couponByTypeStartDate-update\\\"\\n                  [(ngModel)]=\\\"updatedCoupon.startDate\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponByTypeStartDate.valid || couponByTypeStartDate.untouched \\\">coupon startDate is required</small>\\n\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponEndDate\\\">endDate</label>\\n                <input type=\\\"date\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponByTypeEndDate.invalid && couponByTypeEndDate.touched \\\"\\n                  name=\\\"'couponByTypeEndDate'\\\" #couponByTypeEndDate=\\\"ngModel\\\" required id=\\\"couponByTypeEndDate-update\\\" [(ngModel)]=\\\"updatedCoupon.endDate\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponByTypeEndDate.valid || couponByTypeEndDate.untouched \\\">coupon type is required</small>\\n\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponAmount\\\">Amount</label>\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponByTypeAmount.invalid && couponByTypeAmount.touched \\\"\\n                  name=\\\"couponByTypeAmount\\\" required #couponByTypeAmount=\\\"ngModel\\\" id=\\\"couponByTypeAmount-update\\\" [(ngModel)]=\\\"updatedCoupon.amount\\\">\\\\\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponByTypeAmount.valid || couponByTypeAmount.untouched \\\">coupon Amount is required</small>\\n\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponPrice\\\">Price</label>\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponByTypePrice.invalid && couponByTypePrice.touched \\\" name=\\\"couponByTypePrice\\\"\\n                  required #couponByTypePrice=\\\"ngModel\\\" id=\\\"couponByTypePrice-update\\\" [(ngModel)]=\\\"updatedCoupon.price\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponByTypePrice.valid || couponByTypePrice.untouched \\\">coupon Price is required</small>\\n\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponType\\\">Coupon type</label>\\n                <select class=\\\"custom-select\\\" name=\\\"couponByTypeType\\\" [class.is-invalid]=\\\"couponByTypeType.invalid && couponByTypeType.touched \\\"\\n                  required #couponByTypeType=\\\"ngModel\\\" id=\\\"couponByTypeType-update\\\" [(ngModel)]=\\\"updatedCoupon.couponType\\\">\\n\\n                  <option value=\\\"RESTURANS\\\" selected>RESTURANS</option>\\n                  <option value=\\\"ELECTRICITY\\\">ELECTRICITY</option>\\n                  <option value=\\\"FOOD\\\">FOOD</option>\\n                  <option value=\\\"HEALTH\\\">HEALTH</option>\\n                  <option value=\\\"SPORTS\\\">SPORTS</option>\\n                  <option value=\\\"CAMPING\\\">CAMPING</option>\\n                  <option value=\\\"TRAVELLING\\\">TRAVELLING</option>\\n                </select>\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponByTypeType.valid || couponByTypeType.untouched \\\">coupon Price is required</small>\\n\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponMassege\\\">Massege </label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponByTypeMassege.invalid && couponByTypeMassege.touched \\\"\\n                  name=\\\"couponByTypeMassege\\\" required #couponByTypeMassege=\\\"ngModel\\\" id=\\\"couponByTypeMassege-update\\\" [(ngModel)]=\\\"updatedCoupon.massage\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponByTypeMassege.valid || couponByTypeMassege.untouched \\\">coupon Price is required</small>\\n\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponImage\\\">Image </label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponByTypeImage.invalid && couponByTypeImage.touched \\\" name=\\\"couponByTypeImage\\\"\\n                  required #couponByTypeImage=\\\"ngModel\\\" id=\\\"couponByTypeImage-update\\\" [(ngModel)]=\\\"updatedCoupon.image\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponByTypeImage.valid || couponByTypeImage.untouched \\\">coupon Price is required</small>\\n\\n              </div>\\n\\n              <button [disabled]=\\\"updataCouponBtnDisabled\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"couponByTypeTitle.invalid  || couponByTypeStartDate.invalid  ||\\n          couponByTypeEndDate.invalid ||couponByTypeAmount.invalid  ||couponByTypeType.invalid  ||couponByTypeMassege.invalid  ||couponByTypeImage.invalid \\\"\\n                data-toggle=\\\"collapse\\\" data-target=\\\"#updateCouponByTypeModalCenter\\\" aria-controls=\\\"#updateCouponByTypeModalCenter\\\">Update</button>\\n              \\n            </form>\\n          </div>\\n        </div>\\n        <!-- update compny by type collap end -->\\n\\n      </div>\\n      <!--search coupon by type end -->\\n\\n\\n\\n\\n      <!--search coupon by price start -->\\n      <div class=\\\"tab-pane fade \\\" id=\\\"v-pills-get-coupon-by-price\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"v-pills-get-coupon-by-price-tab\\\">\\n        <div *ngIf=\\\"logInSuccess && activateGetCouponByPriceTab \\\">\\n          <!-- search coupon by price input -->\\n          <form #searchByCouponPriceForm=\\\"ngForm\\\" (ngSubmit)=\\\"listSpecificCoouponsByPrice()\\\" novalidate>\\n            <div class=\\\"form-row align-items-center\\\">\\n              <div class=\\\"col-auto my-1\\\">\\n                Enter coupon Price :\\n                <input type=\\\"number\\\" name=\\\"couponPrice\\\" required #couponPrice=\\\"ngModel\\\" id=\\\"couponPrice-search\\\" [(ngModel)]=\\\"serchDataForCouponsByPrice.price\\\">\\n              </div>\\n\\n              <div class=\\\"col-auto my-1\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"couponPrice.invalid\\\" class=\\\"btn btn-primary\\\">Search</button>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n\\n\\n        <!-- coupon by Price cards start -->\\n        <div *ngIf=\\\"logInSuccess && specificByPriceCouponsListed \\\">\\n          <div class=\\\"card text-center\\\" id=\\\"couponIdByPrice\\\" *ngFor=\\\"let coupon of specificByPriceCouponsList\\\">\\n            <div class=\\\"card-header\\\">\\n              Coupon title : {{coupon.title}}\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-4\\\">\\n                  Coupon Start date : {{coupon.startDate}}\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                  Coupon End Date : {{coupon.endDate}}\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                  Coupon Price : {{coupon.price}}\\n                </div>\\n\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-4\\\">\\n                  Coupon Type : {{coupon.couponType}}\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                  Coupon Amount : {{coupon.amount}}\\n                </div>\\n                <div class=\\\"col-12\\\">\\n                  Massege : {{coupon.massage}}\\n                </div>\\n\\n\\n\\n              </div>\\n\\n              <a (click)=\\\"saveCouponForDeleteOrUpdate(coupon)\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#deletCouponByPriceModalCenter\\\">Delete</a>\\n              <a (click)=\\\"saveCouponForDeleteOrUpdate(coupon)\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#updateCouponByPriceModalCenter\\\"\\n                aria-controls=\\\"#updateCouponByTypeModalCenter\\\">Update</a>\\n\\n\\n            </div>\\n            <div class=\\\"card-footer text-muted\\\">\\n\\n            </div>\\n          </div>\\n\\n        </div>\\n\\n        <!-- coupon by Price cards end -->\\n        <!--ask if to delete coupon Modal by Price start -->\\n        <div class=\\\"modal fade\\\" id=\\\"deletCouponByPriceModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"deletCouponByPriceModalCenterTitle\\\"\\n          aria-hidden=\\\"true\\\">\\n          <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n              <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"deletCouponByPriceModalCenterTitle\\\">Delete Coupon</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n              </div>\\n              <div class=\\\"modal-body\\\">\\n                do you want to delete this Coupon ?\\n\\n              </div>\\n              <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                <button type=\\\"button\\\" (click)=onDeleteCoupon() class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\">Delete</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <!--ask if to delete coupon Modal by price end -->\\n\\n\\n        <!-- update coupon by price collap start -->\\n        <div class=\\\"collapse\\\" id=\\\"updateCouponByPriceModalCenter\\\">\\n          <div class=\\\"card card-body\\\">\\n            <form #searchCompanyByPriceUpdateCoupon=\\\"ngForm\\\" (ngSubmit)=\\\"onUpdateCoupon()\\\" novalidate>\\n              <!--update coupon-->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponTitle\\\">Title</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponByPriceTitle.invalid && couponByPriceTitle.touched \\\" disabled\\n                  name=\\\"couponByPriceTitle\\\" #couponByPriceTitle=\\\"ngModel\\\" required id=\\\"couponByPriceTitle-update\\\" [(ngModel)]=\\\"updatedCoupon.title\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponByPriceTitle.valid || couponByPriceTitle.untouched \\\">title is required</small>\\n\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponStartDate\\\">startDate</label>\\n                <input type=\\\"date\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponByPriceStartDate.invalid && couponByPriceStartDate.touched \\\"\\n                  name=\\\"couponByPriceStartDate\\\" #couponByPriceStartDate=\\\"ngModel\\\" required id=\\\"couponByPriceStartDate-update\\\"\\n                  [(ngModel)]=\\\"updatedCoupon.startDate\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponByPriceStartDate.valid || couponByPriceStartDate.untouched \\\">startDate is required</small>\\n\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponEndDate\\\">endDate</label>\\n                <input type=\\\"date\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponByPriceEndDate.invalid && couponByPriceEndDate.touched \\\"\\n                  name=\\\"'couponByPriceEndDate'\\\" #couponByPriceEndDate=\\\"ngModel\\\" required id=\\\"couponByPriceEndDate-update\\\" [(ngModel)]=\\\"updatedCoupon.endDate\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponByPriceEndDate.valid || couponByPriceEndDate.untouched \\\">endDate is required</small>\\n\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponAmount\\\">Amount</label>\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponByPriceAmount.invalid && couponByPriceAmount.touched \\\"\\n                  name=\\\"couponByPriceAmount\\\" required #couponByPriceAmount=\\\"ngModel\\\" id=\\\"couponByPriceAmount-update\\\" [(ngModel)]=\\\"updatedCoupon.amount\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponByPriceAmount.valid || couponByPriceAmount.untouched \\\">amount is required</small>\\n\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponPrice\\\">Price</label>\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponByPricePrice.invalid && couponByPricePrice.touched \\\"\\n                  name=\\\"couponByPricePrice\\\" required #couponByPricePrice=\\\"ngModel\\\" id=\\\"couponByPricePrice-update\\\" [(ngModel)]=\\\"updatedCoupon.price\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponByPricePrice.valid || couponByPricePrice.untouched \\\">Price is required</small>\\n\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponType\\\">Coupon type</label>\\n                <select class=\\\"custom-select\\\" name=\\\"couponByPriceType\\\" [class.is-invalid]=\\\"couponByPriceType.invalid && couponByPriceType.touched \\\"\\n                  required #couponByPriceType=\\\"ngModel\\\" id=\\\"couponByPriceType-update\\\" [(ngModel)]=\\\"updatedCoupon.couponType\\\">\\n\\n                  <option value=\\\"RESTURANS\\\" selected>RESTURANS</option>\\n                  <option value=\\\"ELECTRICITY\\\">ELECTRICITY</option>\\n                  <option value=\\\"FOOD\\\">FOOD</option>\\n                  <option value=\\\"HEALTH\\\">HEALTH</option>\\n                  <option value=\\\"SPORTS\\\">SPORTS</option>\\n                  <option value=\\\"CAMPING\\\">CAMPING</option>\\n                  <option value=\\\"TRAVELLING\\\">TRAVELLING</option>\\n                </select>\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponByPriceType.valid || couponByPriceType.untouched \\\">couponType is required</small>\\n\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponMassege\\\">Massege </label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponByPriceMassege.invalid && couponByPriceMassege.touched \\\"\\n                  name=\\\"couponByPriceMassege\\\" required #couponByPriceMassege=\\\"ngModel\\\" id=\\\"couponByPriceMassege-update\\\" [(ngModel)]=\\\"updatedCoupon.massage\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponByPriceMassege.valid || couponByPriceMassege.untouched \\\">massege is required</small>\\n\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponImage\\\">Image </label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponByPriceImage.invalid && couponByPriceImage.touched \\\" name=\\\"couponByPriceImage\\\"\\n                  required #couponByPriceImage=\\\"ngModel\\\" id=\\\"couponByPriceImage-update\\\" [(ngModel)]=\\\"updatedCoupon.image\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponByPriceImage.valid || couponByPriceImage.untouched \\\">image is required</small>\\n\\n              </div>\\n\\n              <button [disabled]=\\\"updataCouponBtnDisabled\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"couponByPriceTitle.invalid  || couponByPriceStartDate.invalid  ||\\n          couponByPriceEndDate.invalid ||couponByPriceAmount.invalid  ||couponByPriceType.invalid  ||couponByPriceMassege.invalid  ||couponByPriceImage.invalid \\\"\\n                data-toggle=\\\"collapse\\\" data-target=\\\"#updateCouponByPriceModalCenter\\\" aria-controls=\\\"#updateCouponByPriceModalCenter\\\">Update</button>\\n              \\n            </form>\\n          </div>\\n        </div>\\n        <!-- update compny by price collap end -->\\n\\n      </div>\\n      <!--search coupon by price end -->\\n\\n\\n      <!--search coupon by end date start -->\\n      <div class=\\\"tab-pane fade \\\" id=\\\"v-pills-get-coupon-by-endDate\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"v-pills-get-coupon-by-endDate-tab\\\">\\n        <div *ngIf=\\\"logInSuccess && activateGetCouponByEndDateTab \\\">\\n          <!-- search coupon by end data input  -->\\n          <form #searchByCouponEndDateForm=\\\"ngForm\\\" (ngSubmit)=\\\"listSpecificCoouponsByEndDate()\\\" novalidate>\\n            <div class=\\\"form-row align-items-center\\\">\\n              <div class=\\\"col-auto my-1\\\">\\n                Enter coupon End Date :\\n                <input type=\\\"date\\\" name=\\\"couponEndDate\\\" required #couponEndDate=\\\"ngModel\\\" id=\\\"couponEndDate-search\\\" [(ngModel)]=\\\"serchDataForCouponsByEndDate.endDate\\\">\\n              </div>\\n\\n              <div class=\\\"col-auto my-1\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"couponEndDate.invalid\\\" class=\\\"btn btn-primary\\\">Search</button>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n\\n\\n        <!--show company coupons by EndDate cards start -->\\n        <div *ngIf=\\\"logInSuccess && specificByEndDateCouponsListed \\\">\\n          <div class=\\\"card text-center\\\" id=\\\"couponIdByEndDate\\\" *ngFor=\\\"let coupon of specificByEndDateCouponsList\\\">\\n            <div class=\\\"card-header\\\">\\n              Coupon title : {{coupon.title}}\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-4\\\">\\n                  Coupon Start date : {{coupon.startDate}}\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                  Coupon End Date : {{coupon.endDate}}\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                  Coupon Price : {{coupon.price}}\\n                </div>\\n\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-4\\\">\\n                  Coupon Type : {{coupon.couponType}}\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                  Coupon Amount : {{coupon.amount}}\\n                </div>\\n                <div class=\\\"col-12\\\">\\n                  Massege : {{coupon.massage}}\\n                </div>\\n\\n\\n\\n              </div>\\n\\n              <a (click)=\\\"saveCouponForDeleteOrUpdate(coupon)\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#deletCouponByEndDateModalCenter\\\">Delete</a>\\n              <a (click)=\\\"saveCouponForDeleteOrUpdate(coupon)\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#updateCouponByEndDateModalCenter\\\"\\n                aria-controls=\\\"#updateCouponByTypeModalCenter\\\">Update</a>\\n\\n\\n            </div>\\n            <div class=\\\"card-footer text-muted\\\">\\n\\n            </div>\\n          </div>\\n\\n        </div>\\n\\n        <!--show company coupons by EndDate cards end -->\\n        <!--ask if to delete coupon Modal by EndDate start -->\\n        <div class=\\\"modal fade\\\" id=\\\"deletCouponByEndDateModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"deletCouponByEndDateModalCenterTitle\\\"\\n          aria-hidden=\\\"true\\\">\\n          <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n              <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"deletCouponByEndDateModalCenterTitle\\\">Delete Coupon</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n              </div>\\n              <div class=\\\"modal-body\\\">\\n                do you want to delete this Coupon ?\\n\\n              </div>\\n              <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                <button type=\\\"button\\\" (click)=onDeleteCoupon() class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\">Delete</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <!--ask if to delete coupon Modal by EndDate end -->\\n\\n\\n        <!-- update coupon by EndDate collap start -->\\n        <div class=\\\"collapse\\\" id=\\\"updateCouponByEndDateModalCenter\\\">\\n          <div class=\\\"card card-body\\\">\\n            <form #companyCreatCoupon=\\\"ngForm\\\" (ngSubmit)=\\\"onUpdateCoupon()\\\" novalidate>\\n              <!--update coupon-->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponTitle\\\">Title</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponByEndDateTitle.invalid && couponByEndDateTitle.touched\\\"\\n                  disabled name=\\\"couponByEndDateTitle\\\" #couponByEndDateTitle=\\\"ngModel\\\" required id=\\\"couponByEndDateTitle-update\\\"\\n                  [(ngModel)]=\\\"updatedCoupon.title\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponByEndDateTitle.valid || couponByEndDateTitle.untouched \\\">title is required</small>\\n\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponStartDate\\\">startDate</label>\\n                <input type=\\\"date\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponByEndDateStartDate.invalid && couponByEndDateStartDate.touched \\\"\\n                  name=\\\"couponByEndDateStartDate\\\" #couponByEndDateStartDate=\\\"ngModel\\\" required id=\\\"couponByEndDateStartDate-update\\\"\\n                  [(ngModel)]=\\\"updatedCoupon.startDate\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponByEndDateStartDate.valid || couponByEndDateStartDate.untouched \\\">startDate is required</small>\\n\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponEndDate\\\">endDate</label>\\n                <input type=\\\"date\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponByEndDateEndDate.invalid && couponByEndDateEndDate.touched \\\"\\n                  name=\\\"'couponByEndDateEndDate'\\\" #couponByEndDateEndDate=\\\"ngModel\\\" required id=\\\"couponByEndDateEndDate-update\\\"\\n                  [(ngModel)]=\\\"updatedCoupon.endDate\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponByEndDateEndDate.valid || couponByEndDateEndDate.untouched \\\">endDate is required</small>\\n\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponAmount\\\">Amount</label>\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponByEndDateAmount.invalid && couponByEndDateAmount.touched \\\"\\n                  name=\\\"couponByEndDateAmount\\\" required #couponByEndDateAmount=\\\"ngModel\\\" id=\\\"couponByEndDateAmount-update\\\"\\n                  [(ngModel)]=\\\"updatedCoupon.amount\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponByEndDateAmount.valid || couponByEndDateAmount.untouched \\\">amount is required</small>\\n\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponPrice\\\">Price</label>\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponByEndDatePrice.invalid && couponByEndDatePrice.touched \\\"\\n                  name=\\\"couponByEndDatePrice\\\" required #couponByEndDatePrice=\\\"ngModel\\\" id=\\\"couponByEndDatePrice-update\\\" [(ngModel)]=\\\"updatedCoupon.price\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponByEndDatePrice.valid || couponByEndDatePrice.untouched \\\">Price is required</small>\\n\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponType\\\">Coupon type</label>\\n                <select class=\\\"custom-select\\\" [class.is-invalid]=\\\"couponByEndDateType.invalid && couponByEndDateType.touched \\\" name=\\\"couponByEndDateType\\\"\\n                  required #couponByEndDateType=\\\"ngModel\\\" id=\\\"couponByEndDateType-update\\\" [(ngModel)]=\\\"updatedCoupon.couponType\\\">\\n\\n                  <option value=\\\"RESTURANS\\\" selected>RESTURANS</option>\\n                  <option value=\\\"ELECTRICITY\\\">ELECTRICITY</option>\\n                  <option value=\\\"FOOD\\\">FOOD</option>\\n                  <option value=\\\"HEALTH\\\">HEALTH</option>\\n                  <option value=\\\"SPORTS\\\">SPORTS</option>\\n                  <option value=\\\"CAMPING\\\">CAMPING</option>\\n                  <option value=\\\"TRAVELLING\\\">TRAVELLING</option>\\n                </select>\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponByEndDateType.valid || couponByEndDateType.untouched \\\">couponType is required</small>\\n\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponMassege\\\">Massege </label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponByEndDateMassege.invalid && couponByEndDateMassege.touched \\\"\\n                  name=\\\"couponByEndDateMassege\\\" required #couponByEndDateMassege=\\\"ngModel\\\" id=\\\"couponByEndDateMassege-update\\\"\\n                  [(ngModel)]=\\\"updatedCoupon.massage\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponByEndDateMassege.valid || couponByEndDateMassege.untouched \\\">massage is required</small>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputCouponImage\\\">Image </label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"couponByEndDateImage.invalid && couponByEndDateImage.touched \\\"\\n                  name=\\\"couponByEndDateImage\\\" required #couponByEndDateImage=\\\"ngModel\\\" id=\\\"couponByEndDateImage-update\\\" [(ngModel)]=\\\"updatedCoupon.image\\\">\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponByEndDateImage.valid || couponByEndDateImage.untouched \\\">image is required</small>\\n\\n              </div>\\n\\n              <button [disabled]=\\\"updataCouponBtnDisabled\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"couponByEndDateTitle.invalid  || couponByEndDateStartDate.invalid  ||\\n          couponByEndDateEndDate.invalid ||couponByEndDateAmount.invalid  ||couponByEndDateType.invalid  ||couponByEndDateMassege.invalid  ||couponByEndDateImage.invalid \\\"\\n                data-toggle=\\\"collapse\\\" data-target=\\\"#updateCouponByEndDateModalCenter\\\" aria-controls=\\\"#updateCouponByEndDateModalCenter\\\">Update</button>\\n              \\n            </form>\\n          </div>\\n        </div>\\n        <!-- update coupon by EndDate collap end -->\\n\\n      </div>\\n\\n\\n      <!-- company income list start -->\\n      <div class=\\\"tab-pane fade show active\\\" active id=\\\"v-pills-list-income\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"v-pills-list-income-tab\\\">\\n\\n\\n\\n        <!-- company income list start -->\\n\\n        <div *ngIf=\\\"companyIncomeListed && logInSuccess\\\">\\n          <div class=\\\"card card-body\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm\\\">\\n                actions Description\\n              </div>\\n              <div class=\\\"col-sm\\\">\\n                amount\\n              </div>\\n\\n            </div>\\n            <div class=\\\"container\\\" *ngFor=\\\"let income of companyIncomeList\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm\\\">\\n                  <div *ngIf=\\\"income.descrption === 'COMPANY_NEW_COUPON' else  elseMassege \\\">\\n                    {{income.name}} creat new coupon\\n                  </div>\\n                  <ng-template #elseMassege>\\n                    {{income.name}} update coupon\\n\\n                  </ng-template>\\n                </div>\\n                <div class=\\\"col-sm\\\">\\n                  {{income.amount}}\\n                </div>\\n\\n\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <!-- company income list end -->\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { LogInData } from '../log-in-data';\nimport { CompanyHttpService } from '../company-http.service';\nimport { Coupon } from '../coupon';\nimport { SerchDataForCoupons } from '../serch-data-for-coupons';\n\n@Component({\n  selector: 'app-company',\n  templateUrl: './company.component.html',\n  styleUrls: ['./company.component.css']\n})\nexport class CompanyComponent implements OnInit {\n\n  constructor(private companyHttpServic: CompanyHttpService) {\n\n\n  }\n\n  ngOnInit() {\n  }\n\n\n\n\n  // login\n  logInId = null;\n  logInFailed = false;\n  logInModel = new LogInData(this.logInId, \"\", \"\");\n  logInSuccess = false;\n  logInResponseMassege = \"\";\n  logInBtnClickedDisabled = false;\n\n  // coupons\n\n  couponModel = new Coupon(\"\", null, null, null, \"\", \"\", null, \"\");\n  creatCouponBtnClickedDisabled = false;\n\n  creatCouponResponseMassege = \"\";\n  creatCouponMassegeError = false;\n  couponsList = new Array<Coupon>();\n  couponsListed = false;\n  specificByTypeCouponsList = new Array<Coupon>();\n  specificByTypeCouponsListed = false;\n  \n  couponCreatedSuccessfully = false;\n \n  couponCreatedFailed = false;\n\n\n  timpCoupon = new Coupon(\"\",null,null,null,null,null,null,null);\n  updatedCoupon = new Coupon(\"\",null,null,null,null,null,null,null);\n  updataCouponBtnDisabled = false;\n  serchDataForCoupons = new SerchDataForCoupons(null, null, null)\n  serchDataForCouponsByPrice = new SerchDataForCoupons(null, null, null)\n  serchDataForCouponsByEndDate = new SerchDataForCoupons(null, null, null)\n  specificByPriceCouponsList = new Array<Coupon>();;\n  specificByPriceCouponsListed = false;\n  specificByEndDateCouponsList = new Array<Coupon>();;\n  specificByEndDateCouponsListed = false;\n  activateGetCouponByPriceTab = false;\n  activateGetCouponByTypeTab = false;\n  activateGetCouponByEndDateTab = false;\n\n  // company income\n  companyIncomeList = {};\n  companyIncomeListed = false;\n\n\n  // log in function\n  // this function sends company log in data to the server\n  onSubmit() {\n    this.logInBtnClickedDisabled = true;\n    \n    this.companyHttpServic.companyLogIn(this.logInModel)\n      .subscribe(data => this.logInResponseData(data)\n        , error => console.log(\"error\", error));\n\n  }\n  //receive log in response data from the server\n  // if the log in Succeeded the company work space well appear and the log in form well disappear\n  // if the log in failed a massage well appear for the client explaining what happened\n  private logInResponseData(data) {\n\n\n    this.logInResponseMassege = data.response.logInResponseMassege;\n\n    if (this.logInResponseMassege === \"LOGINSUCCESS\" || this.logInResponseMassege === \"ALREADYLOGGEDIN\") {\n      this.logInSuccess = true;\n      this.logInId = data.response.id;\n      this.logInFailed = false;\n    }\n    if (this.logInResponseMassege === \"LOGINFAILED\") {\n      this.logInFailed = true;\n    }\n    this.logInBtnClickedDisabled = false;\n  }\n\n  // sends the client authorization id to log out from the server\n  companyLogOut() {\n    let requestData = {\n      clientId: this.logInId\n    }\n    this.companyHttpServic.companyLogOut(requestData)\n      .subscribe(data => this.logOutResponseData(data),\n        error => console.log(error)\n      )\n  }\n  // receive the data from the server response \n  // hide the company work space\n  logOutResponseData(data) {\n\n    this.logInSuccess = false;\n  }\n\n\n\n\n  /////////////////////////////////////////////////////////////////////////////////////\n\n  //sends the coupon data to creat new coupon on the server \n  onCreatCoupon() {\n    this.creatCouponBtnClickedDisabled = true;\n    this.couponCreatedSuccessfully = false;\n    let requestData = {\n\n      clientId: this.logInId,\n      coupon: this.couponModel\n    }\n    this.companyHttpServic.creatCoupon(requestData)\n      .subscribe(data => this.onCreatCouponData(data)\n        ,\n        error => console.log(error)\n      )\n\n\n  }\n  // receives the server response \n  // if the coupon  created successfully a massage well appear explains that it success \n  // if the server faild to creat the coupon a massage well appear explains that it failed\n  private onCreatCouponData(data) {\n\n\n\n    if (data.responseMessage === \"COUPONISCREATED\") {\n      this.couponCreatedSuccessfully = true;\n      this.couponCreatedFailed = false;\n    }\n    if (data.responseMessage === \"COUPONAMEISALREADYUSED\") {\n      this.couponCreatedFailed = true;\n      this.couponCreatedSuccessfully = false;\n    }\n    this.creatCouponBtnClickedDisabled = false;\n  }\n\n  // sends the company authorization id to get all the company coupons\n  listAllCoupons() {\n    let requestData =\n    {\n      clientId: this.logInId\n\n    }\n\n    this.companyHttpServic.listAllCoupons(requestData)\n      .subscribe(data => this.listAllCouponsData(data));\n\n\n\n  }\n  // receive the response from the server\n  // save the list of the company coupons to local variable\n  // shows the company coupons in the work space\n  listAllCouponsData(data) {\n    this.couponsList = data.response;\n    this.couponsListed = true;\n  }\n  // saves the coupon in a temporary variable before update of delete\n  saveCouponForDeleteOrUpdate(coupon) {\n    this.timpCoupon = coupon;\n    this.updatedCoupon = coupon;\n    \n  }\n  // sends the coupon data from the temporary variable \n  // and the authorization id to the server to update the coupon\n  onUpdateCoupon() {\n    this.updataCouponBtnDisabled = true;\n    let requestData = {\n\n      clientId: this.logInId,\n      coupon: this.updatedCoupon\n    }\n\n    this.companyHttpServic.updateCoupon(requestData)\n      .subscribe(data => this.onUpdateCouponData(data))\n  }\n  // receives the response from the server\n  //  update the coupon list in the work space\n  private onUpdateCouponData(data) {\n\n    this.listAllCoupons();\n    this.updataCouponBtnDisabled = false\n\n  }\n\n  // sends the authorization id and the coupon data\n  // from the temporary variable to the srver to delete it\n  onDeleteCoupon() {\n    let requestData = {\n      clientId: this.logInId,\n      coupon: this.timpCoupon\n    }\n\n    this.companyHttpServic.deleteCoupon(requestData)\n      .subscribe(data => this.deleteCouponData(data))\n  }\n\n  // receives the response from the server and change the list \n  // of the coumpany coupons\n  private deleteCouponData(data) {\n\n\n    this.listAllCoupons();\n\n\n  }\n\n  // company incom function\n  //sends the coumpany authorization id to get the coumpany income list\n  // list data\n  listAllCompanyIncome() {\n    let requestData = {\n      clientId: this.logInId\n    }\n    this.companyHttpServic.getCompanyIncome(requestData)\n      .subscribe(data => this.listAllCompanyIncomeData(data))\n  }\n  // receives the response data from the server \n  // saves the list of the company income to local variable \n  // shows the list of income in the work space\n  private listAllCompanyIncomeData(data) {\n\n\n    this.companyIncomeList = data.response;\n    this.companyIncomeListed = true;\n  }\n\n  //sends the authorization id and coupon type to the srver \n  // to search for coupons with same type\n  listSpecificCouponsByType() {\n\n\n    let requestData = {\n      clientId: this.logInId,\n      specificCouponData: this.serchDataForCoupons\n    }\n    this.companyHttpServic.getSpecificCoupons(requestData)\n      .subscribe(data => this.listSpecificCouponsData(data));\n  }\n  // receive list of the searched coupons from the server\n  // save the list to local variable \n  // show the list in the company work space\n  private listSpecificCouponsData(data) {\n    this.specificByTypeCouponsList = data.response;\n    this.specificByTypeCouponsListed = true;\n  }\n  //sends the authorization id and coupon price to the srver \n  // to search for coupons with same or less price\n  listSpecificCoouponsByPrice() {\n\n    let requestData = {\n      clientId: this.logInId,\n      specificCouponData: this.serchDataForCouponsByPrice\n    }\n    this.companyHttpServic.getSpecificCoupons(requestData)\n      .subscribe(data => this.listSpecificCouponsByPriceData(data));\n  }\n  // receive list of the searched coupons from the server\n  // save the list to local variable \n  // show the list in the company work space\n  private listSpecificCouponsByPriceData(data) {\n    this.specificByPriceCouponsList = data.response;\n    this.specificByPriceCouponsListed = true;\n  }\n  //sends the authorization id and coupon endDate to the srver \n  // to search for coupons with same endDate\n  listSpecificCoouponsByEndDate() {\n    this.activateSearchTabs(false, false, true);\n    let requestData = {\n      clientId: this.logInId,\n      specificCouponData: this.serchDataForCouponsByEndDate\n    }\n    this.companyHttpServic.getSpecificCoupons(requestData)\n      .subscribe(data => this.listSpecificCouponsByEndDateData(data));\n  }\n  // receive list of the searched coupons from the server\n  // save the list to local variable \n  // show the list in the company work space\n  private listSpecificCouponsByEndDateData(data) {\n    this.specificByEndDateCouponsList = data.response;\n    this.specificByEndDateCouponsListed = true;\n  }\n\n  // show the search by type form \n  activateSearchByType() {\n    this.activateSearchTabs(true, false, false);\n  }\n  // show the search by price form\n  activateSearchByPrice() {\n    this.activateSearchTabs(false, true, false);\n  }\n  // show the search by endDate form\n  activateSearchByEndDate() {\n    this.activateSearchTabs(false, false, true);\n  }\n\n  activateSearchTabs(isByTypeSearch: boolean, isByPriceSearch: boolean, isByEndDateSearch: boolean) {\n    this.activateGetCouponByPriceTab = isByPriceSearch;\n    this.activateGetCouponByTypeTab = isByTypeSearch;\n    this.activateGetCouponByEndDateTab = isByEndDateSearch;\n\n  }\n}\n","export class Coupon {\n\n    constructor(public title:string\n                ,public startDate:Date \n                ,public endDate:Date \n                ,public amount:number\n                ,public couponType:string\n                ,public massage:string\n                ,public price:number\n                ,public image:string){\n\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\nimport { LogInData } from './log-in-data'; \n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerHttpService {\n\n  constructor(private customerHttp:HttpClient) { }\n\n  private baseUrl:string=\"customerRest\";\n\n\n// sends the log in data to the server to get the authorization id and log in successfully\n  customerLogIn(logIn:LogInData){\n    return this.customerHttp.post<any>(this.baseUrl +\"/customerlogIn\",logIn);\n\n }\n \n customerLogOut(logInIdData){\n return this.customerHttp.post<any>(this.baseUrl+\"/customerLogOut\",logInIdData);\n }\n customerPurechasCoupon(requestData){\n  return this.customerHttp.post<any>(this.baseUrl+\"/purchaseCoupon\",requestData);\n  }\n  listCustomrCoupon(requestData){\n    return this.customerHttp.post<any>(this.baseUrl+\"/listAllCustomerCoupons\",requestData);\n    }\n    listCustomrSpecificCoupon(requestData){\n      return this.customerHttp.post<any>(this.baseUrl+\"/getCouponsByCouponTypeOrPrice\",requestData);\n      }\n      getCoupons(){\n        return this.customerHttp.get<any>(this.baseUrl+\"/getAllCoupon\");\n      }\n}\n","export class Customer {\n    constructor(public name:string,public password:string){\n        \n    }\n}\n","module.exports = \"h1{\\r\\n    text-align: center;\\r\\n}\\r\\n.logIn{\\r\\n    margin: 2em;\\r\\n    margin-right: 60%;\\r\\n}\"","module.exports = \"<h1>Customer Service</h1>\\n\\n\\n<!-- customer log in form  start -->\\n\\n<div class=\\\"logIn \\\" [hidden]=\\\"logInSuccess\\\">\\n  <form #cusomerLogIn=\\\"ngForm\\\" (ngSubmit)=\\\"onCustomerLogIn()\\\" novalidate>\\n\\n    <div>\\n      <div class=\\\"form-group\\\">\\n\\n        <label for=\\\"inputUserName\\\" [class.text-danger]=\\\"name.invalid && name.touched\\\">User Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"name.invalid && name.touched\\\" name=\\\"Name\\\" required #name=\\\"ngModel\\\"\\n          id=\\\"LogInUserName\\\" [(ngModel)]=\\\"logInModel.userName\\\">\\n        <small class=\\\"text-danger\\\" [class.d-none]=\\\"name.valid || name.untouched \\\">user name is required</small>\\n\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"inputUserName\\\" [class.text-danger]=\\\"password.invalid && password.touched\\\">Password</label>\\n        <input type=\\\"password\\\" [class.is-invalid]=\\\"password.invalid && password.touched\\\" class=\\\"form-control\\\" name=\\\"password\\\" required\\n          #password=\\\"ngModel\\\" id=\\\"LogInPassword\\\" [(ngModel)]=\\\"logInModel.password\\\">\\n        <small class=\\\"text-danger\\\" [class.d-none]=\\\"password.valid || password.untouched \\\">password is required</small>\\n      </div>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"name.invalid || name.untouched || password.invalid || logInBtnClickedDisabled \\\">logIn</button>\\n      <div>\\n        <small class=\\\"text-danger\\\" [class.d-none]=\\\"!logInFailed \\\">log in failed wrong user name or password</small>\\n        \\n      </div>\\n    </div>\\n  </form>\\n</div>\\n<div>\\n  <button (click)=\\\"customerLogOut()\\\" [hidden]=!logInSuccess>log out</button>\\n</div>\\n<!-- customer log in form  end -->\\n\\n\\n\\n\\n<!-- customer main content  start -->\\n<div class=\\\"row\\\" [hidden]=!logInSuccess>\\n  <!-- links for the content -->\\n  <div class=\\\"col-3\\\">\\n    <div class=\\\"nav flex-column nav-pills\\\" id=\\\"v-pills-tab\\\" role=\\\"tablist\\\" aria-orientation=\\\"vertical\\\">\\n      <a class=\\\"nav-link\\\" id=\\\"v-pills-purchase-coupon-tab\\\" (click)=\\\"listAllCoupons();\\\" data-toggle=\\\"pill\\\" href=\\\"#v-pills-purchase-coupon\\\"\\n        role=\\\"tab\\\" aria-controls=\\\"v-pills-purchase-coupon\\\" aria-selected=\\\"true\\\">Coupons</a>\\n      <a class=\\\"nav-link\\\" id=\\\"v-pills-get-my-coupon-tab\\\" (click)=\\\"listMyCoupons();activateGetMyCoupon() \\\" data-toggle=\\\"pill\\\" href=\\\"#v-pills-get-my-coupon\\\"\\n        role=\\\"tab\\\" aria-controls=\\\"v-pills-get-my-coupon\\\" aria-selected=\\\"false\\\">My Coupons </a>\\n      <a class=\\\"nav-link\\\" id=\\\"v-pills-get-coupon-by-type-tab\\\" (click)=\\\"activateGetMyCouponByType() \\\" data-toggle=\\\"pill\\\" href=\\\"#v-pills-get-coupon-by-type\\\"\\n        role=\\\"tab\\\" aria-controls=\\\"v-pills-get-coupon-by-type\\\" aria-selected=\\\"false\\\">coupons by type</a>\\n      <a class=\\\"nav-link\\\" id=\\\"v-pills-get-coupon-by-price-tab\\\" (click)=\\\"activateGetMyCouponByPrice() \\\" data-toggle=\\\"pill\\\" href=\\\"#v-pills-get-coupon-by-price\\\"\\n        role=\\\"tab\\\" aria-controls=\\\"v-pills-get-coupon-by-price\\\" aria-selected=\\\"false\\\">coupons by price</a>\\n    </div>\\n  </div>\\n  <!-- customer work space -->\\n  <div class=\\\"col-9\\\">\\n    <div class=\\\"tab-content\\\" id=\\\"v-pills-tabContent\\\">\\n\\n      <!-- show all coupon for the customer to purchase start-->\\n      <div class=\\\"tab-pane fade show active\\\" active id=\\\"v-pills-purchase-coupon\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"v-pills-purchase-coupon-tab\\\">\\n\\n        <!-- coupons show cards start -->\\n        <!-- if log in not success and the coupon still not listed this data wont show for the client -->\\n        <div *ngIf=\\\"logInSuccess && couponsListed \\\">\\n          <div class=\\\"card text-center\\\" id=\\\"couponId\\\" *ngFor=\\\"let coupon of couponList\\\">\\n            <div class=\\\"card-header\\\">\\n              Coupon title : {{coupon.title}}\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-4\\\">\\n                  Coupon Start date : {{coupon.startDate}}\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                  Coupon End Date : {{coupon.endDate}}\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                  Coupon Price : {{coupon.price}}\\n                </div>\\n\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-4\\\">\\n                  Coupon Type : {{coupon.couponType}}\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                  Coupon Amount : {{coupon.amount}}\\n                </div>\\n                <div class=\\\"col-12\\\">\\n                  Massege : {{coupon.massage}}\\n                </div>\\n              </div>\\n\\n              <a (click)=\\\"saveCouponForPurchase(coupon)\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#purchaseCouponModalCenter\\\">Purchase Coupon</a>\\n\\n\\n\\n            </div>\\n            <div class=\\\"card-footer text-muted\\\">\\n\\n            </div>\\n          </div>\\n\\n        </div>\\n\\n        <!-- coupon cards end -->\\n\\n        <!--ask if the customer want to purchase the coupon Modal  start -->\\n        <div class=\\\"modal fade\\\" id=\\\"purchaseCouponModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"purchaseCouponModalCenterTitle\\\"\\n          aria-hidden=\\\"true\\\">\\n          <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n              <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"purchaseCouponModalCenterTitle\\\">Delete Coupon</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n              </div>\\n              <div class=\\\"modal-body\\\">\\n                do you want to purchase this Coupon ?\\n\\n              </div>\\n              <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                <button type=\\\"button\\\" (click)=purchaseCoupon() class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\">Purchase</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <!-- ask if the customer want to purchase the coupon Modal end -->\\n      </div>\\n      <!-- show all coupon for the customer to purchase end -->\\n\\n\\n\\n      <!-- show custmers coupon start -->\\n      <div class=\\\"tab-pane fade show active\\\" active id=\\\"v-pills-get-my-coupon\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"v-pills-get-my-coupon-tab\\\">\\n        <!-- coupon cards start -->\\n        <!-- if log in not success , my coupon listed and my coupons tab  not clicked this data wont show for the client -->\\n        <div *ngIf=\\\"logInSuccess && myCouponsListed && getMyCouponActivate \\\">\\n          <div class=\\\"card text-center\\\" id=\\\"myCouponId\\\" *ngFor=\\\"let coupon of myCouponsList\\\">\\n            <div class=\\\"card-header\\\">\\n              Coupon title : {{coupon.title}}\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-4\\\">\\n                  Coupon Start date : {{coupon.startDate}}\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                  Coupon End Date : {{coupon.endDate}}\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                  Coupon Price : {{coupon.price}}\\n                </div>\\n\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-4\\\">\\n                  Coupon Type : {{coupon.couponType}}\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                  Coupon Amount : {{coupon.amount}}\\n                </div>\\n                <div class=\\\"col-12\\\">\\n                  Massege : {{coupon.massage}}\\n                </div>\\n                <div class=\\\"col-12\\\">\\n                  Image : {{coupon.image}}\\n                </div>\\n              </div>\\n\\n\\n\\n\\n            </div>\\n            <div class=\\\"card-footer text-muted\\\">\\n\\n            </div>\\n          </div>\\n\\n        </div>\\n\\n        <!-- coupon cards end -->\\n\\n      </div>\\n      <!-- show custmers coupon end -->\\n\\n\\n\\n      <!-- show custmer coupon by type start -->\\n      <div class=\\\"tab-pane fade show active\\\" active id=\\\"v-pills-get-coupon-by-type\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"v-pills-get-coupon-by-type-tab\\\">\\n\\n        <!-- if log in not success and the coupon by type tab not clicked this data wont show for the client -->\\n        <div *ngIf=\\\"logInSuccess  && getMyCouponByTypeActivate\\\">\\n\\n          <form #searchByCouponTypeForm=\\\"ngForm\\\" (ngSubmit)=\\\"listMyCouponByType()\\\" novalidate>\\n            <div class=\\\"form-row align-items-center\\\">\\n              Chose coupon type :\\n              <div class=\\\"col-auto my-1\\\">\\n\\n                <select class=\\\"custom-select mr-sm-2\\\" [class.is-invalid]=\\\"couponType.invalid && couponType.touched\\\" name=\\\"couponType\\\" required\\n                  #couponType=\\\"ngModel\\\" id=\\\"couponType-search\\\" [(ngModel)]=\\\"typeOfTheCoupon.couponType\\\">\\n\\n                  <option value=\\\"RESTURANS\\\" selected>RESTURANS</option>\\n                  <option value=\\\"ELECTRICITY\\\">ELECTRICITY</option>\\n                  <option value=\\\"FOOD\\\">FOOD</option>\\n                  <option value=\\\"HEALTH\\\">HEALTH</option>\\n                  <option value=\\\"SPORTS\\\">SPORTS</option>\\n                  <option value=\\\"CAMPING\\\">CAMPING</option>\\n                  <option value=\\\"TRAVELLING\\\">TRAVELLING</option>\\n                </select>\\n              </div>\\n\\n              <div class=\\\"col-auto my-1\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"couponType.invalid\\\" class=\\\"btn btn-primary\\\">Search</button>\\n              </div>\\n              <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponType.valid || couponType.untouched \\\">couponType is required</small>\\n\\n            </div>\\n          </form>\\n        </div>\\n\\n\\n        <!-- coupon cards start -->\\n        <div *ngIf=\\\"logInSuccess && myCouponsListedByType \\\">\\n          <div class=\\\"card text-center\\\" id=\\\"myCouponId\\\" *ngFor=\\\"let coupon of myCouponsListByType\\\">\\n            <div class=\\\"card-header\\\">\\n              Coupon title : {{coupon.title}}\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-4\\\">\\n                  Coupon Start date : {{coupon.startDate}}\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                  Coupon End Date : {{coupon.endDate}}\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                  Coupon Price : {{coupon.price}}\\n                </div>\\n\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-4\\\">\\n                  Coupon Type : {{coupon.couponType}}\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                  Coupon Amount : {{coupon.amount}}\\n                </div>\\n                <div class=\\\"col-12\\\">\\n                  Massege : {{coupon.massage}}\\n                </div>\\n                <div class=\\\"col-12\\\">\\n                  Image : {{coupon.image}}\\n                </div>\\n              </div>\\n\\n\\n\\n\\n            </div>\\n            <div class=\\\"card-footer text-muted\\\">\\n\\n            </div>\\n          </div>\\n\\n        </div>\\n\\n        <!-- coupon cards end -->\\n\\n      </div>\\n      <!-- show custmer coupon by type end -->\\n\\n      <!-- show custmer coupon by price start -->\\n      <div class=\\\"tab-pane fade show active\\\" active id=\\\"v-pills-get-coupon-by-price\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"v-pills-get-coupon-by-price-tab\\\">\\n\\n        <!-- if log in not success and the coupon by price tab not clicked this data wont show for the client -->\\n        <div *ngIf=\\\"logInSuccess  && getMyCouponByPriceActivate\\\">\\n          <!-- search coupon by price forme start -->\\n          <form #searchByCouponPriceForm=\\\"ngForm\\\" (ngSubmit)=\\\"listMyCouponByPrice()\\\" novalidate>\\n            <div class=\\\"form-row align-items-center\\\">\\n              <div class=\\\"col-auto my-1\\\">\\n                Enter coupon Price :\\n                <input type=\\\"number\\\" name=\\\"couponPrice\\\" required #couponPrice=\\\"ngModel\\\" id=\\\"couponPrice-search\\\" [(ngModel)]=\\\"priceOfTheCoupon.price\\\">\\n              </div>\\n\\n              <div class=\\\"col-auto my-1\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"couponPrice.invalid\\\" class=\\\"btn btn-primary\\\">Search</button>\\n              </div>\\n              <small class=\\\"text-danger\\\" [class.d-none]=\\\"couponPrice.valid || couponPrice.untouched \\\">coupon price is required</small>\\n            </div>\\n          </form>\\n          <!-- search coupon by price forme end -->\\n        </div>\\n\\n\\n        <!-- coupon cards start -->\\n        <div *ngIf=\\\"logInSuccess && myCouponsListedByPrice \\\">\\n          <div class=\\\"card text-center\\\" id=\\\"myCouponId\\\" *ngFor=\\\"let coupon of myCouponsListByPrice\\\">\\n            <div class=\\\"card-header\\\">\\n              Coupon title : {{coupon.title}}\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-4\\\">\\n                  Coupon Start date : {{coupon.startDate}}\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                  Coupon End Date : {{coupon.endDate}}\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                  Coupon Price : {{coupon.price}}\\n                </div>\\n\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-4\\\">\\n                  Coupon Type : {{coupon.couponType}}\\n                </div>\\n                <div class=\\\"col-4\\\">\\n                  Coupon Amount : {{coupon.amount}}\\n                </div>\\n                <div class=\\\"col-12\\\">\\n                  Massege : {{coupon.massage}}\\n                </div>\\n                <div class=\\\"col-12\\\">\\n                  Image : {{coupon.image}}\\n                </div>\\n              </div>\\n\\n\\n\\n\\n            </div>\\n            <div class=\\\"card-footer text-muted\\\">\\n\\n            </div>\\n          </div>\\n\\n        </div>\\n\\n        <!-- coupon cards end -->\\n\\n      </div>\\n      <!-- show custmer coupon by price start -->\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { LogInData } from '../log-in-data';\nimport { CustomerHttpService } from '../customer-http.service';\nimport { SerchDataForCoupons } from '../serch-data-for-coupons';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements OnInit {\n\n  constructor(private customerHttpServic: CustomerHttpService) { }\n\n  ngOnInit() {\n  }\n\n\n\n  // login\n  logInId = null;\n  logInModel = new LogInData(this.logInId, \"\", \"\");\n  logInSuccess = false;\n  logInResponseMassege = \"\";\n  logInBtnClickedDisabled = false;\n  logInFailed = false;\n\n  //coupons\n  coupon = {};\n  couponList = {};\n  couponsListed = false;\n  myCouponsList = {}\n  myCouponsListed = false;\n  typeOfTheCoupon = new SerchDataForCoupons(null, null, null);\n  priceOfTheCoupon = new SerchDataForCoupons(null, null, null);\n  myCouponsListByType = {};\n  myCouponsListedByType = false;\n  myCouponsListByPrice = {};\n  myCouponsListedByPrice = false;\n  getMyCouponByTypeActivate = false;\n  getMyCouponByPriceActivate = false;\n  getMyCouponActivate = false;\n\n\n\n\n\n\n  // when the customer press the log in button the function sendes the data to the server \n  onCustomerLogIn() {\n    this.logInBtnClickedDisabled = true;\n    this.customerHttpServic.customerLogIn(this.logInModel)\n      .subscribe(data => this.logInResponseData(data)\n        , error => console.log(\"error\", error));\n  }\n\n  //this function receives the data from the server \n  //if the customer log in was successful(already logged in is successfully logged in) the customer work space we'll  appear and log in input we'll be hidden\n  //if the customer log in was failed the client well show appropriate massage\n  private logInResponseData(data) {\n    // save the log in response massage from the data base\n    this.logInResponseMassege = data.response.logInResponseMassege;\n\n    if (this.logInResponseMassege === \"LOGINSUCCESS\" || this.logInResponseMassege === \"ALREADYLOGGEDIN\") {\n      this.logInSuccess = true;\n      this.logInId = data.response.id;\n      this.logInFailed = false;\n    }\n    if (this.logInResponseMassege === \"LOGINFAILED\") {\n      this.logInFailed = true;\n      this.logInId = null;\n    }\n\n\n    this.logInBtnClickedDisabled = false;\n  }\n\n  // when the custmer presses the log out button sends the login id(authorization id ) to the server\n  customerLogOut() {\n    let requestData = {\n      clientId: this.logInId\n    }\n\n    this.customerHttpServic.customerLogOut(requestData)\n      .subscribe(data => this.customerLogOutData(data));\n  }\n\n  // receives the data from the server \n  // and logging out the user in the client\n  // shows the log in input and hide the customer work space \n  customerLogOutData(data) {\n    this.logInId = null;\n    this.logInSuccess = false;\n  }\n\n  // sends the request to get all the coupons from the server \n  listAllCoupons() {\n    this.customerHttpServic.getCoupons().\n      subscribe(data => this.listAllCouponData(data));\n  }\n  // get the data of all the coupons from the server\n  // and save it in array in the client \n  // show the coupon list in the html\n  private listAllCouponData(data) {\n    this.couponList = data.response;\n    this.couponsListed = true;\n\n\n  }\n  // sendes the Authorization id to the server to get customer purchased coupons\n  listMyCoupons() {\n    let requestData = {\n      clientId: this.logInId\n    }\n    this.customerHttpServic.listCustomrCoupon(requestData)\n      .subscribe(data => this.listMyCouponsData(data));\n  }\n  // receives the data from the server \n  // saves the coupons in client array \n  // show the list in the customer work space\n  listMyCouponsData(data) {\n    console.log(data);\n    this.myCouponsList = data.response;\n    this.myCouponsListed = true;\n  }\n\n  // saves the customer from the html in order to purchase it\n  saveCouponForPurchase(coupon) {\n    this.coupon = coupon;\n  }\n  // sends the authorization id and coupon data for purchase\n  // and saves the purchase data in income table in data base \n  purchaseCoupon() {\n    let requestData = {\n      clientId: this.logInId,\n      coupon: this.coupon\n    }\n\n    this.customerHttpServic.customerPurechasCoupon(requestData)\n      .subscribe(data => this.purchaseCouponData(data))\n\n  }\n  // receives data from the server\n  purchaseCouponData(data) {\n   \n\n\n  }\n  // sendes the Authorization id and specific coupon data to the server to get customer purchased coupons by type\n  listMyCouponByType() {\n    let requestData = {\n      clientId: this.logInId,\n      specificCouponData: this.typeOfTheCoupon\n    }\n\n    this.customerHttpServic.listCustomrSpecificCoupon(requestData)\n      .subscribe(data => this.listMyCouponByTypeData(data))\n  }\n  // receives the data from the server \n  // saves the coupons in client array \n  // show the list in the customer work space\n  private listMyCouponByTypeData(data) {\n    this.myCouponsListByType = data.response;\n    \n    this.myCouponsListedByType = true;\n\n\n  }\n\n  // sendes the Authorization id and specific coupon data to the server to get customer purchased coupons by price\n  listMyCouponByPrice() {\n    let requestData = {\n      clientId: this.logInId,\n      specificCouponData: this.priceOfTheCoupon\n    }\n\n    this.customerHttpServic.listCustomrSpecificCoupon(requestData)\n      .subscribe(data => this.listMyCouponByPriceData(data))\n  }\n  // receives the data from the server \n  // saves the coupons in client array \n  // show the list in the customer work space\n  private listMyCouponByPriceData(data) {\n    this.myCouponsListByPrice = data.response;\n    \n    this.myCouponsListedByPrice = true;\n\n\n  }\n  // show the customer list of coupons\n  // hide the rest listes\n  activateGetMyCouponByType() {\n\n    this.getMyCouponByTypeActivate = true;\n    this.getMyCouponByPriceActivate = false;\n    this.getMyCouponActivate = false;\n\n  }\n  // show the customer list of coupons by type\n  // hide the rest listes\n  activateGetMyCouponByPrice() {\n\n    this.getMyCouponByTypeActivate = false;\n    this.getMyCouponByPriceActivate = true;\n    this.getMyCouponActivate = false;\n\n  }\n  // show the customer list of coupons by price\n  // hide the rest listes\n  activateGetMyCoupon() {\n\n    this.getMyCouponByTypeActivate = false;\n    this.getMyCouponByPriceActivate = false;\n    this.getMyCouponActivate = true;\n\n  }\n\n}\n\n\n\n\n","export class LogInData {\n    \n    constructor(public userId:number,public userName:string,public password:string){\n    \n    }\n}\n","export class SerchDataForCoupons {\n    constructor(public couponType:string ,public price:number ,public endDate:Date){}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}